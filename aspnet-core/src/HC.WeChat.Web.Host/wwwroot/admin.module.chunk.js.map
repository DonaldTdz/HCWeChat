{"version":3,"sources":["D:/projects/hc/HCWeChat/ng-admin/src/app/admin/admin-routing.module.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/admin.module.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/basic-info/driver/driver.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/basic-info/driver/driver.component.scss","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/basic-info/driver/driver.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity-list.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity-list.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/employees/employees.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/employees/employees.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form-detail/activity-form-detail.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form-detail/activity-form-detail.component.scss","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form-detail/activity-form-detail.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form/activity-form.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form/activity-form.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/create-role/create-role.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/create-role/create-role.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/edit-role/edit-role.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/edit-role/edit-role.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/roles.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/roles.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/create-tenant/create-tenant.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/create-tenant/create-tenant.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/edit-tenant/edit-tenant.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/edit-tenant/edit-tenant.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/tenant.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/tenant.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/create-user/create-user.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/create-user/create-user.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/edit-user/edit-user.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/edit-user/edit-user.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/employee-modal/employee-modal.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/employee-modal/employee-modal.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/users.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/users.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/auth-setting/auth-setting.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/auth-setting/auth-setting.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/create-message/create-message.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/create-message/create-message.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/edit-message/edit-message.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/edit-message/edit-message.component.ts","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/messages.component.html","D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/messages.component.ts"],"names":[],"mappings":"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","file":"admin.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n// layout\r\nimport { LayoutDefaultComponent } from '../layout/default/default.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { AppRouteGuard } from '@shared/auth/auth-route-guard';\r\nimport { DriverComponent } from './basic-info/driver/driver.component';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\nimport { AuthSettingComponent } from './weichat-setting/auth-setting/auth-setting.component';\r\nimport { MessagesComponent } from './weichat-setting/messages/messages.component';\r\nimport { ActivityFormComponent } from './marketing/activity-form/activity-form.component';\r\nimport { EmployeesComponent } from './markeeting-serve/employees/employees.component';\r\nimport { ActivityComponent } from './markeeting-serve/activity/activity.component';\r\nimport { ActivityFormDetailComponent } from './marketing/activity-form-detail/activity-form-detail.component';\r\nimport { ActivityListComponent } from './markeeting-serve/activity/activity-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: '',\r\n      component: LayoutDefaultComponent,\r\n      children: [\r\n          { path: '', redirectTo: 'users', pathMatch: 'full' },\r\n          { path: 'users', component: UsersComponent, data: { translate: 'users', permission: 'Pages.Users' }, canActivate: [AppRouteGuard] },\r\n          { path: 'roles', component: RolesComponent, data: { translate: 'roles', permission: 'Pages.Roles' }, canActivate: [AppRouteGuard] },\r\n          { path: 'driver', component: DriverComponent, data: { translate: 'driver', permission: 'Pages.DistDriver' }, canActivate: [AppRouteGuard] },\r\n          { path: 'tenant', component: TenantComponent, data: { translate: 'tenant', permission: 'Pages.Tenants' }, canActivate: [AppRouteGuard] },\r\n          { path: 'authsetting', component: AuthSettingComponent, data: { translate: 'authsetting', permission: 'Pages' }, canActivate: [AppRouteGuard] },\r\n          { path: 'message', component: MessagesComponent, data: { translate: 'message', permission: 'Pages' }, canActivate: [AppRouteGuard] },\r\n          { path: 'employee', component: EmployeesComponent, data: { translate: 'employee', permission: 'Pages' }, canActivate: [AppRouteGuard] },\r\n          { path: 'activity', component: ActivityComponent, data: { translate: 'activity', permission: 'Pages' }, canActivate: [AppRouteGuard] },\r\n          { path: 'activity-form', component: ActivityFormComponent, data: { translate: 'activity-form', permission: 'Pages' }, canActivate: [AppRouteGuard] },\r\n          { path: 'activity-form-detail/:id', component: ActivityFormDetailComponent, data: { translate: 'activity-form-detail', permission: 'Pages', title:'申请单明细' }, canActivate: [AppRouteGuard] },\r\n          { path: 'activity-list', component: ActivityListComponent, data: { translate: 'activity-list', permission: 'Pages' }, canActivate: [AppRouteGuard] }\r\n      ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/admin-routing.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { LayoutModule } from '../layout/layout.module';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { EditUserComponent } from './users/edit-user/edit-user.component';\r\nimport { CreateUserComponent } from \"./users/create-user/create-user.component\";\r\nimport { RolesComponent } from './roles/roles.component';\r\nimport { CreateRoleComponent } from \"./roles/create-role/create-role.component\";\r\nimport { DriverComponent } from './basic-info/driver/driver.component';\r\nimport { EditRoleComponent } from './roles/edit-role/edit-role.component';\r\nimport { TenantComponent } from './tenant/tenant.component';\r\nimport { CreateTenantComponent } from './tenant/create-tenant/create-tenant.component';\r\nimport { EditTenantComponent } from './tenant/edit-tenant/edit-tenant.component';\r\nimport { AuthSettingComponent } from './weichat-setting/auth-setting/auth-setting.component';\r\nimport { MessagesComponent } from './weichat-setting/messages/messages.component';\r\nimport { EditMessageComponent } from './weichat-setting/messages/edit-message/edit-message.component';\r\nimport { CreateMessageComponent } from './weichat-setting/messages/create-message/create-message.component';\r\nimport { EmployeeModalComponent } from './users/employee-modal/employee-modal.component';\r\nimport { EmployeesComponent } from './markeeting-serve/employees/employees.component';\r\nimport { ActivityComponent } from './markeeting-serve/activity/activity.component';\r\n\r\nimport { ActivityFormComponent } from './marketing/activity-form/activity-form.component';\r\nimport { ActivityFormDetailComponent } from './marketing/activity-form-detail/activity-form-detail.component';\r\n\r\n//权限判断\r\nimport { AppRouteGuard } from '../shared/auth/auth-route-guard';\r\nimport { ActivityListComponent } from './markeeting-serve/activity/activity-list.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    LayoutModule,\r\n    AdminRoutingModule\r\n  ],\r\n  declarations: [ \r\n    UsersComponent,\r\n    EditUserComponent,\r\n    CreateUserComponent,\r\n    RolesComponent,\r\n    CreateRoleComponent,\r\n    DriverComponent,\r\n    EditRoleComponent,\r\n    TenantComponent,\r\n    CreateTenantComponent,\r\n    EditTenantComponent,\r\n    AuthSettingComponent,\r\n    MessagesComponent,\r\n    EditMessageComponent,\r\n    CreateMessageComponent,\r\n    EmployeeModalComponent,\r\n    EmployeesComponent,\r\n    ActivityComponent,\r\n    ActivityFormComponent,\r\n    ActivityFormDetailComponent,\r\n    ActivityListComponent\r\n   ],\r\n   providers: [ AppRouteGuard,DriverComponent ]\r\n})\r\nexport class AdminModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/admin.module.ts","module.exports = \"<!--component html goes here -->\\r\\n<pro-header  ></pro-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n    <form nz-form (ngSubmit)=\\\"refreshData()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n        <div nz-row [nzGutter]=\\\"24\\\">\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"no\\\">工号</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-input [(ngModel)]=\\\"code\\\" name=\\\"no\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请输入'\\\" nzId=\\\"no\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n                <button nz-button type=\\\"submit\\\" [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"loading\\\" [nzSize]=\\\"'large'\\\">查询</button>\\r\\n                <button nz-button type=\\\"reset\\\" (click)=\\\"getDriverAll()\\\" [nzSize]=\\\"'large'\\\" class=\\\"mx-sm\\\">重置</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <nz-table #nzTable [nzAjaxData]=\\\"data\\\" [nzTotal]=\\\"q.total\\\" [(nzPageIndex)]=\\\"q.pi\\\" [(nzPageSize)]=\\\"q.ps\\\" [nzLoading]=\\\"loading\\\"\\r\\n        [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"getDriverAll()\\\" (nzPageSizeChange)=\\\"getDriverAll()\\\">\\r\\n        <thead nz-thead>\\r\\n            <tr>\\r\\n                <th nz-th>\\r\\n                    <span>工号</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>姓名</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>岗位编号</span>\\r\\n                </th>\\r\\n\\r\\n                <!-- <th nz-th>\\r\\n                    <span>操作</span>\\r\\n                </th> -->\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody nz-tbody>\\r\\n            <tr nz-tbody-tr *ngFor=\\\"let driver of nzTable.data\\\">\\r\\n                <td nz-td>{{driver.useR_ID}}</td>\\r\\n                <td nz-td>{{driver.useR_NAME}}</td>\\r\\n                <td nz-td>{{driver.positioN_CODE}}</td> \\r\\n                <!-- <td nz-td>\\r\\n                    <nz-badge [nzStatus]=\\\"user.activeType\\\" [nzText]=\\\"user.activeText\\\"></nz-badge>\\r\\n                </td>\\r\\n               <td nz-td>\\r\\n                    <a (click)=\\\"editUser(user)\\\">编辑</a>\\r\\n                    <span nz-table-divider></span>\\r\\n                    <a (click)=\\\"msg.success('删除' + user.id)\\\">删除</a>\\r\\n                </td> -->\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n</nz-card>\\r\\n<!-- <edit-user-modal #editUserModal (modalSave)=\\\"refreshData()\\\"></edit-user-modal>\\r\\n<create-user-modal #createUserModal (modalSave)=\\\"refreshData()\\\"></create-user-modal> -->\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/basic-info/driver/driver.component.html\n// module id = ../../../../../src/app/admin/basic-info/driver/driver.component.html\n// module chunks = admin.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/basic-info/driver/driver.component.scss\n// module id = ../../../../../src/app/admin/basic-info/driver/driver.component.scss\n// module chunks = admin.module","import { Component, OnInit, Injector } from '@angular/core';\r\nimport { Driver, DriverServiceProxy, PagedResultDtoOfDriver } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'driver',\r\n    templateUrl: 'driver.component.html',\r\n    styleUrls: ['driver.component.scss']\r\n})\r\nexport class DriverComponent implements OnInit {\r\n    q: any = {\r\n        pi: 1,\r\n        ps: 10,\r\n        total: 0,\r\n        sorter: '',\r\n        status: -1,\r\n        statusList: []\r\n    };\r\n    loading = false;\r\n    code: string = '';\r\n    data: Driver[] = [];\r\n    constructor(injector: Injector, private service: DriverServiceProxy) {\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.getDriverAll();\r\n    }\r\n\r\n    getDriverAll(reset = false) {\r\n        if (reset) {\r\n            this.q.pi = 1;\r\n        }\r\n        this.loading = true;\r\n        this.service.getAll((this.q.pi - 1) * this.q.ps, this.q.ps).subscribe((result: PagedResultDtoOfDriver) => {\r\n            this.loading = false;\r\n            let status = 0;\r\n            this.data = result.items.map(i => {\r\n                // if (i.isActive) {\r\n                //     status = 0;\r\n                // } else {\r\n                //     status = 1;\r\n                // }\r\n                // const statusItem = this.status[status];\r\n                // i.activeText = statusItem.text;\r\n                // i.activeType = statusItem.type;\r\n                return i;\r\n            })\r\n            this.q.total = result.totalCount;\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/basic-info/driver/driver.component.ts","module.exports = \"<pro-header></pro-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n    <form nz-form (ngSubmit)=\\\"refreshData()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n        <div nz-row [nzGutter]=\\\"24\\\">\\r\\n            <ng-template #deleteContent>\\r\\n                <h2>是否删除活动{{activityName}}?</h2>\\r\\n            </ng-template>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"name\\\">活动名称</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-input [(ngModel)]=\\\"search.name\\\" name=\\\"name\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请输入活动名称'\\\" nzId=\\\"name\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"startTime\\\">开始时间</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-datepicker name=\\\"startTime\\\" [(ngModel)]=\\\"search.startTime\\\" [nzSize]=\\\"'large'\\\" nzId=\\\"startTime\\\" nzPlaceHolder=\\\"请输入开始时间\\\"></nz-datepicker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"endTime\\\">结束时间</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-datepicker name=\\\"endTime\\\" [(ngModel)]=\\\"search.endTime\\\" nzId=\\\"endTime\\\" nzPlaceHolder=\\\"请输入结束时间\\\"></nz-datepicker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n                <button nz-button type=\\\"submit\\\" [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"loading\\\" [nzSize]=\\\"'large'\\\">查询</button>\\r\\n                <button nz-button type=\\\"reset\\\" (click)=\\\"refreshData()\\\" [nzSize]=\\\"'large'\\\" class=\\\"mx-sm\\\">重置</button>\\r\\n                <button nz-button (click)=\\\"createActivity()\\\" [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\">\\r\\n                    <i class=\\\"anticon anticon-plus\\\"></i>\\r\\n                    <span>新建</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <nz-table #nzTable [nzAjaxData]=\\\"acticities\\\" [nzTotal]=\\\"query.total\\\" [(nzPageIndex)]=\\\"query.pageIndex\\\" [(nzPageSize)]=\\\"query.pageSize\\\"\\r\\n        [nzLoading]=\\\"loading\\\" [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"refreshData()\\\" (nzPageSizeChange)=\\\"refreshData()\\\">\\r\\n        <thead nz-thead>\\r\\n            <tr>\\r\\n                <th nz-th>\\r\\n                    <span>名称</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>开始时间</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>结束时间</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>分类</span>\\r\\n                </th>\\r\\n                <!-- <th nz-th>\\r\\n                    <span>活动内容</span>\\r\\n                </th> -->\\r\\n                <th nz-th>\\r\\n                    <span>经理可存未完申请</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>客户可存未完申请</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>发布时间</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>状态</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>操作</span>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody nz-tbody>\\r\\n            <tr nz-tbody-tr *ngFor=\\\"let activity of nzTable.data\\\">\\r\\n                <td nz-td>{{activity.name}}</td>\\r\\n                <td nz-td>{{activity.beginTime | _date}}</td>\\r\\n                <td nz-td>{{activity.endTime | _date}}</td>\\r\\n                <td nz-td>{{activity.activityType}}</td>\\r\\n                <!-- <td nz-td>{{activity.content}}</td> -->\\r\\n                <td nz-td>{{activity.mUnfinished}}</td>\\r\\n                <td nz-td>{{activity.rUnfinished}}</td>\\r\\n                <td nz-td>{{activity.publishTime | _date}}</td>\\r\\n                <td nz-td>{{activity.statusName}}</td>\\r\\n                <td nz-td>\\r\\n                    <a (click)=\\\"editActivity(activity)\\\">编辑</a>\\r\\n                    <span nz-table-divider></span>\\r\\n                    <a (click)=\\\"delete(activity,deleteContent)\\\">删除</a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n</nz-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity-list.component.html\n// module id = ../../../../../src/app/admin/markeeting-serve/activity/activity-list.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector } from \"@angular/core\";\r\nimport { AppComponentBase } from \"@shared/app-component-base\";\r\nimport { ActivityServiceProxy, PagedResultDtoOfActivity } from \"@shared/service-proxies/marketing-service/acticity-service\";\r\nimport { Activity } from \"@shared/service-proxies/entity/acitivity\";\r\nimport { Parameter } from \"@shared/service-proxies/entity\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ActivityGoodsServiceProxy } from \"@shared/service-proxies/marketing-service/activity-goods-service\";\r\nimport { NzModalService } from \"ng-zorro-antd\";\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'activity-list',\r\n    templateUrl: 'activity-list.component.html',\r\n})\r\nexport class ActivityListComponent extends AppComponentBase implements OnInit {\r\n\r\n    acticities: Activity[] = [];\r\n    loading = false;\r\n    activityName = '';\r\n    search: any = { startTime: null, endTime: null }\r\n    constructor(injector: Injector, private ActivityService: ActivityServiceProxy, private router: Router,\r\n        private ActivityGoodsService: ActivityGoodsServiceProxy,\r\n        private modal: NzModalService,\r\n    ) {\r\n        super(injector);\r\n    }\r\n    ngOnInit(): void {\r\n        this.refreshData();\r\n    }\r\n    /**\r\n     * 获取活动列表\r\n     * @param reset 是否重置\r\n     */\r\n    refreshData(reset = false) {\r\n        if (reset) {\r\n            this.query.pageIndex = 1;\r\n        }\r\n        this.loading = true;\r\n        this.ActivityService.getAll(this.query.skipCount(), this.query.pageSize, this.getParmeter()).subscribe((result: PagedResultDtoOfActivity) => {\r\n            this.loading = false;\r\n            this.acticities = result.items;\r\n            this.query.total = result.totalCount;\r\n        })\r\n    }\r\n    /**\r\n     * 获取查询条件\r\n     */\r\n    getParmeter(): Parameter[] {\r\n        var arry = [];\r\n        arry.push(Parameter.fromJS({ key: 'name', value: this.search.name }));\r\n        arry.push(Parameter.fromJS({ key: 'startTime', value: this.dateFormat(this.search.startTime) }));\r\n        arry.push(Parameter.fromJS({ key: 'endTime', value: this.dateFormat(this.search.endTime) }));\r\n        return arry;\r\n    }\r\n    /**\r\n     * 创建活动\r\n     */\r\n    createActivity() {\r\n        this.router.navigate(['admin/activity']);\r\n    }\r\n    /**\r\n     * 修改活动\r\n     */\r\n    editActivity(activity: Activity) {\r\n        this.router.navigate(['admin/activity', activity.id]);\r\n    }\r\n    /**\r\n     * 删除活动\r\n     */\r\n    delete(acticity: Activity, TplContent) {\r\n        this.activityName = acticity.name;\r\n        this.modal.confirm({\r\n            content: TplContent,\r\n            okText: '确定',\r\n            cancelText: '取消',\r\n            onOk: () => {\r\n                this.ActivityService.delete(acticity.id).subscribe(() => {\r\n                    this.notify.info(this.l('删除成功！'));\r\n                    this.refreshData();\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity-list.component.ts","module.exports = \"<!--component html goes here -->\\r\\n<!-- <div class=\\\"content__title\\\">\\r\\n    <h1>UEditor\\r\\n        <small>Dependencies\\r\\n            <a href=\\\"//github.com/cipchk/ngx-ueditor\\\" target=\\\"_blank\\\">ngx-ueditor</a>\\r\\n        </small>\\r\\n    </h1>\\r\\n</div> -->\\r\\n\\r\\n<!-- <nz-card>\\r\\n    <ueditor [(ngModel)]=\\\"html\\\"></ueditor>\\r\\n</nz-card> -->\\r\\n\\r\\n<form nz-form [formGroup]=\\\"formA\\\" id=\\\"frm_create_role\\\" (ngSubmit)=\\\"saveSub()\\\">\\r\\n    <nz-card [nzBordered]=\\\"false\\\" nzTitle=\\\"活动管理\\\">\\r\\n        <div nz-row [nzGutter]=\\\"16\\\">\\r\\n            <div nz-col nzMd=\\\"7\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label nz-form-item-required>名称</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                        <nz-input style=\\\"height:32px;\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"acitivityDto.name\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于200</div>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入活动名称</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col nzMd=\\\"7\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label>状态</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col class=\\\"text-pink-light\\\">\\r\\n                        {{acitivityDto.statusName}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col nzMd=\\\"6\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label>发布时间</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col class=\\\"text-pink-light\\\">\\r\\n                        {{publishTimes|_date}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- <div nz-col nzMd=\\\"6\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col>\\r\\n                    <label></label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div> -->\\r\\n\\r\\n\\r\\n\\r\\n        <div nz-row [nzGutter]=\\\"16\\\">\\r\\n\\r\\n            <div nz-col nzMd=\\\"7\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label nz-form-item-required>开始时间</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col nzHasFeedback [nzValidateStatus]=\\\"getFormControl('beginTime')\\\">\\r\\n                        <nz-datepicker style=\\\"height:32px;width:100%;\\\" [nzSize]=\\\"large\\\" formControlName=\\\"beginTime\\\" [(ngModel)]=\\\"acitivityDto.beginTime\\\"></nz-datepicker>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('beginTime').dirty&&getFormControl('beginTime').hasError('required')\\\">请输入活动开始时间</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-col nzMd=\\\"7\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label nz-form-item-required>结束时间</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col nzHasFeedback [nzValidateStatus]=\\\"getFormControl('endTime')\\\">\\r\\n                        <nz-datepicker style=\\\"width:100%;\\\" formControlName=\\\"endTime\\\" [(ngModel)]=\\\"acitivityDto.endTime\\\" ></nz-datepicker>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('endTime').dirty&&getFormControl('endTime').hasError('required')\\\">请输入活动结束时间</div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-col nzMd=\\\"6\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label nz-form-item-required>分类</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col nzHasFeedback [nzValidateStatus]=\\\"getFormControl('activityType')\\\">\\r\\n                        <nz-select formControlName=\\\"activityType\\\" [nzPlaceHolder]=\\\"'活动分类'\\\" [(ngModel)]=\\\"acitivityDto.activityType\\\" [nzShowSearch]=\\\"true\\\" nzSize=\\\"large\\\">\\r\\n                            <nz-option *ngFor=\\\"let i of AcTypes\\\" [nzLabel]=\\\"i.text\\\" [nzValue]=\\\"i.value\\\">\\r\\n                            </nz-option>\\r\\n                        </nz-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div nz-row [nzGutter]=\\\"16\\\">\\r\\n\\r\\n            <div nz-col nzMd=\\\"7\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col nzHasFeedback>\\r\\n                        <label>未完用烟申请限制</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-col nzMd=\\\"7\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label>客户经理</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col nzHasFeedback [nzValidateStatus]=\\\"getFormControl('mUnfinished')\\\">\\r\\n                        <nz-input-number style=\\\"width:100%;\\\" [nzSize]=\\\"large\\\" [nzStep]=\\\"1\\\" [nzMin]=\\\"0\\\" [nzMax]=\\\"9999\\\" formControlName=\\\"mUnfinished\\\"\\r\\n                            [(ngModel)]=\\\"acitivityDto.mUnfinished\\\"></nz-input-number>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-col nzMd=\\\"6\\\" nzSm=\\\"12\\\" nzXs=\\\"24\\\">\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col>\\r\\n                        <label>零售客户</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col nzHasFeedback [nzValidateStatus]=\\\"getFormControl('rUnfinished')\\\">\\r\\n                        <nz-input-number style=\\\"width:100%;\\\" [nzSize]=\\\"large\\\" [nzStep]=\\\"1\\\" [nzMin]=\\\"0\\\" [nzMax]=\\\"9999\\\" formControlName=\\\"rUnfinished\\\"\\r\\n                            [(ngModel)]=\\\"acitivityDto.rUnfinished\\\"></nz-input-number>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div nz-row [nzGutter]=\\\"16\\\">\\r\\n            <div nz-form-label nz-col>\\r\\n                <label nz-form-item-required>内容</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col nzHasFeedback [nzValidateStatus]=\\\"getFormControl('content')\\\">\\r\\n                <nz-input nzType=\\\"textarea\\\" formControlName=\\\"content\\\" [(ngModel)]=\\\"acitivityDto.content\\\" [nzId]=\\\"'content'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('content').dirty&&getFormControl('content').hasError('required')\\\">请输入活动内容</div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </nz-card>\\r\\n    <nz-card *ngIf=\\\"isGoodabled\\\" [nzBordered]=\\\"false\\\" nzTitle=\\\"商品管理\\\">\\r\\n        <nz-table formArrayName=\\\"items\\\" [nzDataSource]=\\\"items.value\\\" [nzIsPagination]=\\\"false\\\">\\r\\n            <thead nz-thead>\\r\\n                <tr>\\r\\n                    <th nz-th>商品规格</th>\\r\\n                    <th nz-th>单次申请最小限制</th>\\r\\n                    <th nz-th>单次申请最大限制</th>\\r\\n                    <th nz-th>优惠说明</th>\\r\\n                    <th nz-th>操作</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody nz-tbody>\\r\\n                <tr nz-tbody-tr *ngFor=\\\"let item of items.controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\r\\n                    <td nz-td>\\r\\n                        <span *ngIf=\\\"editIndex!==i\\\">{{items.value[i].specification}}</span>\\r\\n                        <span *ngIf=\\\"editIndex===i\\\" nz-form-control [nzValidateStatus]=\\\"item.controls.specification\\\">\\r\\n                            <label nz-form-item-required></label>\\r\\n                            <nz-input style=\\\"width:85%;\\\" formControlName=\\\"specification\\\" nzPlaceHolder=\\\"商品规格\\\" nzSize=\\\"large\\\"></nz-input>\\r\\n                            <div nz-form-explain *ngIf=\\\"item.controls.specification.dirty&&item.controls.specification.hasError('required')\\\">规格不能为空</div>\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td nz-td>\\r\\n                        <span *ngIf=\\\"editIndex!==i\\\">{{items.value[i].minNum}}</span>\\r\\n                        <span *ngIf=\\\"editIndex===i\\\" nz-form-control [nzValidateStatus]=\\\"item.controls.minNum\\\">\\r\\n                            <label nz-form-item-required></label>\\r\\n                            <nz-input-number [nzMin]=\\\"0\\\" style=\\\"width:85%;\\\" formControlName=\\\"minNum\\\" nzPlaceHolder=\\\"单次申请最小限制\\\" nzSize=\\\"large\\\"></nz-input-number>\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td nz-td>\\r\\n                        <span *ngIf=\\\"editIndex!==i\\\">{{items.value[i].maxNum}}</span>\\r\\n                        <span *ngIf=\\\"editIndex===i\\\" nz-form-control [nzValidateStatus]=\\\"item.controls.maxNum\\\">\\r\\n                            <label nz-form-item-required></label>\\r\\n                            <nz-input-number [nzMin]=\\\"0\\\" style=\\\"width:85%;\\\" formControlName=\\\"maxNum\\\" nzPlaceHolder=\\\"单次申请最大限制\\\" nzSize=\\\"large\\\"></nz-input-number>\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <td nz-td>\\r\\n                        <span *ngIf=\\\"editIndex!==i\\\">{{items.value[i].discountDesc}}</span>\\r\\n                        <span *ngIf=\\\"editIndex===i\\\" nz-form-control [nzValidateStatus]=\\\"item.controls.discountDesc\\\">\\r\\n                            <nz-input formControlName=\\\"discountDesc\\\" nzPlaceHolder=\\\"优惠说明\\\" nzSize=\\\"large\\\"></nz-input>\\r\\n                        </span>\\r\\n                    </td>\\r\\n                    <!-- <td nz-td style=\\\"display:none\\\">\\r\\n                        <span *ngIf=\\\"editIndex!==i\\\">{{items.value[i].id}}</span>\\r\\n                        <span *ngIf=\\\"editIndex===i\\\" nz-form-control [nzValidateStatus]=\\\"item.controls.id\\\">\\r\\n                            <nz-input formControlName=\\\"id\\\"  nzPlaceHolder=\\\"商品id\\\" nzSize=\\\"large\\\"></nz-input>\\r\\n                        </span>\\r\\n                    </td> -->\\r\\n                    <td nz-td>\\r\\n                        <span *ngIf=\\\"editIndex!==i\\\">\\r\\n                            <a (click)=\\\"edit(i)\\\">编辑</a>\\r\\n                            <span nz-table-divider></span>\\r\\n                            <nz-popconfirm (nzOnConfirm)=\\\"delete(i,items.value[i].id)\\\" [nzTitle]=\\\"'是否要删除'+items.value[i].specification+'?'\\\">\\r\\n                                <a nz-popconfirm>删除</a>\\r\\n                            </nz-popconfirm>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"editIndex===i\\\">\\r\\n                            <a (click)=\\\"save(i)\\\">保存</a>\\r\\n                            <span nz-table-divider></span>\\r\\n                            <nz-popconfirm (nzOnConfirm)=\\\"cancel(i)\\\" [nzTitle]=\\\"'是否要取消操作？'\\\">\\r\\n                                <a nz-popconfirm>取消</a>\\r\\n                            </nz-popconfirm>\\r\\n                        </span>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </nz-table>\\r\\n        <button *ngIf=\\\"editIndex===-1\\\" nz-button [nzType]=\\\"'dashed'\\\" [nzSize]=\\\"'large'\\\" (click)=\\\"add()\\\" class=\\\"ant-btn__block mt-md\\\">\\r\\n            <i class=\\\"anticon anticon-plus\\\"></i>\\r\\n            <span>新增成员</span>\\r\\n        </button>\\r\\n    </nz-card>\\r\\n\\r\\n    <!-- <button *ngIf=\\\"isSave\\\" nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n        {{l(\\\"保存\\\")}}\\r\\n    </button>\\r\\n    <button *ngIf=\\\"isPulish\\\" nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"pulish(modelContent)\\\" [nzSize]=\\\"'large'\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n        {{l(\\\"发布\\\")}}\\r\\n    </button> -->\\r\\n    <footer-toolbar errorCollect>\\r\\n            <button *ngIf=\\\"isSave\\\" nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                {{l(\\\"保存\\\")}}\\r\\n            </button>\\r\\n            <button *ngIf=\\\"isPulish\\\" nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"pulish(modelContent)\\\" [nzSize]=\\\"'large'\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                {{l(\\\"发布\\\")}}\\r\\n            </button>\\r\\n        </footer-toolbar>\\r\\n</form>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity.component.html\n// module id = ../../../../../src/app/admin/markeeting-serve/activity/activity.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { Activity } from '@shared/service-proxies/entity/acitivity';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { ActivityGoodsServiceProxy, PagedResultDtoOfActivityGoods } from '@shared/service-proxies/marketing-service/activity-goods-service';\r\nimport { Parameter } from '@shared/service-proxies/entity';\r\nimport { ActivityServiceProxy } from '@shared/service-proxies/marketing-service/acticity-service';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\nimport { ActivityGoods } from '@shared/service-proxies/entity/activity-goods';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'activity',\r\n    templateUrl: 'activity.component.html',\r\n})\r\nexport class ActivityComponent extends AppComponentBase implements OnInit {\r\n\r\n    acitivityDto: Activity = new Activity;\r\n    goodes: ActivityGoods[] = [];\r\n    good: ActivityGoods = new ActivityGoods;\r\n    html = '';\r\n    formA: FormGroup;\r\n    searchName = '';\r\n    loading = false;\r\n    AcTypes = [\r\n        { text: '办事用烟', value: 1 }\r\n    ];\r\n    publishTimes: Date;\r\n    activityId = '';\r\n    //按钮是否可见\r\n    isSave = true;\r\n    isPulish = false;\r\n    isGoodabled = false;\r\n    isConfirmLoading = false;\r\n    isAlert = false;\r\n    //行内编辑\r\n    editIndex = -1;\r\n    editObj = {};\r\n    id = ''\r\n    constructor(injector: Injector, private activityService: ActivityServiceProxy,\r\n        private fb: FormBuilder, private activityGoodsService: ActivityGoodsServiceProxy,\r\n        private modal: NzModalService, private router: ActivatedRoute\r\n    ) {\r\n        super(injector);\r\n        this.id = this.router.snapshot.params['id']\r\n    }\r\n\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this.formA = this.fb.group({\r\n            name: [null, Validators.compose([Validators.required, Validators.maxLength(200)])],\r\n            beginTime: [null, Validators.compose([Validators.required])],\r\n            endTime: [null, [Validators.required]],\r\n            activityType: [null, Validators.compose([Validators.required])],\r\n            mUnfinished: [null],\r\n            rUnfinished: [null],\r\n            content: [null, Validators.compose([Validators.required])],\r\n            status: [null],\r\n            publishTime: [null],\r\n            items: this.fb.array([])\r\n        });\r\n        this.getSingleActivity();\r\n    }\r\n\r\n\r\n    //#region 活动\r\n\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    getFormControl(name: string) {\r\n        return this.formA.controls[name];\r\n    }\r\n    /**\r\n     * 获取单个活动信息\r\n     */\r\n    getSingleActivity() {\r\n        this.activityService.get().subscribe((result: Activity) => {\r\n            this.acitivityDto = result;\r\n            this.publishTimes = this.acitivityDto.publishTime;\r\n            // this.publishTimes = this.dateFormat(this.acitivityDto.publishTime);\r\n            this.activityId = result.id;\r\n            if (this.acitivityDto.id) {\r\n                this.isGoodabled = true;\r\n                this.isSave = false;\r\n                this.isPulish = true;\r\n            } else {\r\n                //活动活动状态\r\n                this.acitivityDto.status = 1;\r\n                this.acitivityDto.statusName = '草稿';\r\n                //按钮是否可见\r\n                this.isSave = true;\r\n                this.isPulish = false;\r\n                this.acitivityDto.mUnfinished = 15;\r\n                this.acitivityDto.rUnfinished = 6;\r\n            }\r\n            if (result.id) {\r\n                this.refreshData();\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * 保存活动\r\n     */\r\n    saveSub() {\r\n        for (const i in this.formA.controls) {\r\n            this.formA.controls[i].markAsDirty();\r\n        }\r\n        if (this.formA.valid) {\r\n            this.isConfirmLoading = true;\r\n            if (!this.acitivityDto.id) {\r\n                //当新增活动时将活动状态设为草稿\r\n                this.acitivityDto.status = 1;\r\n            }\r\n            this.saveActivity();\r\n\r\n        }\r\n    }\r\n    /**\r\n     * 活动保存\r\n     */\r\n    saveActivity() {\r\n        this.activityService.update(this.acitivityDto)\r\n            .finally(() => { this.isConfirmLoading = false; })\r\n            .subscribe((result: Activity) => {\r\n                this.acitivityDto = result;\r\n                this.notify.info(this.l('保存成功！'));\r\n                this.isGoodabled = true;\r\n            });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region 活动商品\r\n\r\n    get items() { return this.formA.controls.items as FormArray; }\r\n    /**\r\n     * 获取活动商品信息\r\n     */\r\n    refreshData() {\r\n        this.loading = true;\r\n        this.activityGoodsService.getAll(this.query.skipCount(), this.query.pageSize, this.getParameter()).subscribe((result: PagedResultDtoOfActivityGoods) => {\r\n            this.goodes = result.items;\r\n            this.loading = false;\r\n            this.query.total = result.totalCount;\r\n            this.goodes.forEach(i => {\r\n                //创建formbuilder\r\n                const field = this.createFormGoods();\r\n                //给formbuilder赋值\r\n                field.patchValue(i);\r\n                //将有值得formbuilder付给items\r\n                this.items.push(field);\r\n            });\r\n        });\r\n    }\r\n\r\n    createFormGoods(): FormGroup {\r\n        return this.fb.group({\r\n            specification: [null, Validators.compose([Validators.required, Validators.maxLength(200)])],\r\n            minNum: [null, Validators.compose([Validators.required, Validators.min(0)])],\r\n            maxNum: [null, [Validators.compose([Validators.required, Validators.min(0)])]],\r\n            discountDesc: [null],\r\n            id: [null],\r\n        })\r\n    }\r\n\r\n    getParameter(): Parameter[] {\r\n        let arry = [];\r\n        arry.push(Parameter.fromJS({ key: 'AvtivityId', value: this.acitivityDto.id }));\r\n        arry.push(Parameter.fromJS({ key: 'SearchName', value: this.searchName }));\r\n        return arry;\r\n    }\r\n\r\n    /**\r\n     * 新增\r\n     * @param i \r\n     */\r\n    add() {\r\n        this.items.push(this.createFormGoods());\r\n        var index = this.items.length - 1\r\n        this.edit(index);\r\n        // this.items.at(index).value.minNum = 10;\r\n    }\r\n\r\n    /**\r\n     * 编辑\r\n     * @param i \r\n     */\r\n    edit(index: number) {\r\n        //editIndex用于判断是否新增\r\n        if (this.editIndex !== -1 && this.editObj) {\r\n            this.items.at(this.editIndex).patchValue(this.editObj);\r\n        }\r\n        //editObj用于当编辑取消时将它付给编辑的行\r\n        this.editObj = { ...this.items.at(index).value };\r\n        this.editIndex = index;\r\n    }\r\n\r\n    /**\r\n     * 保存\r\n     * @param index \r\n     */\r\n    save(index: number) {\r\n        this.items.at(index).markAsDirty();\r\n        if (this.items.at(index).invalid) return;\r\n        this.editIndex = -1;\r\n        //保存入数据库\r\n        this.itemToGood(index);\r\n        this.activityGoodsService.update(this.good).subscribe((result: ActivityGoods) => {\r\n            //将新增的实体添加到实体集合中\r\n            this.goodes.push(result)\r\n            //将新增的实体加入到form中（主要是添加id）\r\n            this.items.at(index).patchValue(result);\r\n            this.notify.info(this.l('保存成功！'));\r\n            this.good = new ActivityGoods();\r\n        });\r\n    }\r\n    /**\r\n     * 删除\r\n     * @param i \r\n     */\r\n    delete(index: number, id?: string) {\r\n        if (id) {\r\n            this.activityGoodsService.delete(this.items.at(index).value.id).subscribe(() => {\r\n                this.notify.info(this.l('删除成功！'));\r\n                this.items.removeAt(index);\r\n                for(let i=0;i<this.goodes.length;i++){\r\n                    if (this.goodes[i].id == id) {\r\n                        this.goodes.splice(i,1);\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            this.items.removeAt(index);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消\r\n     * @param i \r\n     */\r\n    cancel(index: number) {\r\n        //当id为空的时候就删除新建的一行（新建取消）\r\n        //当id不为空的时候就把原来的值付给当前行（编辑取消）\r\n        if (!this.items.at(index).value.id) {\r\n            this.delete(index);\r\n        } else {\r\n            this.items.at(index).patchValue(this.editObj);\r\n        }\r\n        this.editIndex = -1;\r\n    }\r\n    //#endregion\r\n\r\n    /**\r\n     * 发布(增加下架验证)\r\n     */\r\n    pulish(contentTpl) {\r\n        if (this.goodes.length > 0) {\r\n            this.acitivityDto.status = 2;\r\n            this.acitivityDto.publishTime = new Date;\r\n            this.saveSub();\r\n        } else {\r\n            this.modal.warning({\r\n                title: '请先添加商品！'\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将页面的数据转换到good中\r\n     * @param index \r\n     */\r\n    itemToGood(index: number) {\r\n        this.good = new ActivityGoods();\r\n        this.good.activityId = this.acitivityDto.id;\r\n        if (this.items.at(index).value.id) {\r\n            this.goodes.forEach(i => {\r\n                if (i.id == this.items.at(index).value.id) {\r\n                    this.good = i;\r\n                }\r\n            });\r\n        }\r\n        //将form中输入的数据放入实体中\r\n        this.good.specification = this.items.at(index).value.specification;\r\n        this.good.minNum = this.items.at(index).value.minNum;\r\n        this.good.maxNum = this.items.at(index).value.maxNum;\r\n        this.good.discountDesc = this.items.at(index).value.discountDesc;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/activity/activity.component.ts","module.exports = \"<pro-header></pro-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n    <form nz-form (ngSubmit)=\\\"refreshData()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n        <div nz-row [nzGutter]=\\\"24\\\">\\r\\n            <ng-template #deleteContent>\\r\\n                <h2>是否删除员工{{employeeName}}?</h2>\\r\\n            </ng-template>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-input [(ngModel)]=\\\"q.search\\\" name=\\\"search\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请输入员工名或员工编码'\\\" nzId=\\\"search\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n                <button nz-button type=\\\"submit\\\" [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"loading\\\" [nzSize]=\\\"'large'\\\">查询</button>\\r\\n                <button nz-button type=\\\"reset\\\" (click)=\\\"refreshData()\\\" [nzSize]=\\\"'large'\\\" class=\\\"mx-sm\\\">重置</button>\\r\\n                <button nz-button (click)=\\\"createEmployee()\\\" [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\">\\r\\n                    <i class=\\\"anticon anticon-plus\\\"></i>\\r\\n                    <span>新建</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <nz-table #nzTable [nzAjaxData]=\\\"employees\\\" [nzTotal]=\\\"q.total\\\" [(nzPageIndex)]=\\\"q.pi\\\" [(nzPageSize)]=\\\"q.ps\\\" [nzLoading]=\\\"loading\\\"\\r\\n        [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"refreshData()\\\" (nzPageSizeChange)=\\\"refreshData()\\\">\\r\\n        <thead nz-thead>\\r\\n            <tr>\\r\\n                <th nz-th>\\r\\n                    <span>员工编码</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>姓名</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>职位</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>电话</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>所属公司</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>所属市场部</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>启用</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>操作</span>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody nz-tbody>\\r\\n            <tr nz-tbody-tr *ngFor=\\\"let employee of nzTable.data\\\">\\r\\n                <td nz-td>{{employee.code}}</td>\\r\\n                <td nz-td>{{employee.name}}</td>\\r\\n                <td nz-td>{{employee.positionName}}</td>\\r\\n                <td nz-td>{{employee.phone}}</td>\\r\\n                <td nz-td>{{employee.company}}</td>\\r\\n                <td nz-td>{{employee.department}}</td>\\r\\n                <td nz-td>\\r\\n                    <nz-badge [nzStatus]=\\\"employee.activeType\\\" [nzText]=\\\"employee.activeText\\\"></nz-badge>\\r\\n                </td>\\r\\n                <td nz-td>\\r\\n                    <a (click)=\\\"editEmployee(employee)\\\">编辑</a>\\r\\n                    <span nz-table-divider></span>\\r\\n                    <a (click)=\\\"delete(employee,deleteContent)\\\">删除</a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n</nz-card>\\r\\n<!-- <edit-tenant-modal #editTenantModal (modalSave)=\\\"refreshData()\\\"></edit-tenant-modal> -->\\r\\n<!-- <create-employee-modal #createEmployeeModal (modalSave)=\\\"refreshData()\\\"></create-employee-modal> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/employees/employees.component.html\n// module id = ../../../../../src/app/admin/markeeting-serve/employees/employees.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { EmployeesServiceProxy, PagedResultDtoOfEmployee } from '@shared/service-proxies/service-proxies';\r\nimport { Employee } from '@shared/service-proxies/entity/employee';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'employees',\r\n    templateUrl: 'employees.component.html',\r\n})\r\nexport class EmployeesComponent extends AppComponentBase implements OnInit {\r\n\r\n    q: any = {\r\n        pi: 1,\r\n        ps: 10,\r\n        total: 0,\r\n        sorter: '',\r\n        status: -1,\r\n        statusList: [],\r\n        search: ''\r\n    };\r\n    loading = false;\r\n    status = [\r\n        { text: '启用', value: false, type: 'success' },\r\n        { text: '禁用', value: false, type: 'default' },\r\n    ];\r\n    positions = [\r\n        { text: '零售客户', value: 1 },\r\n        { text: '客户经理', value: 2 },\r\n        { text: '营销人员', value: 3 },\r\n        { text: '消费者', value: 4 },\r\n        { text: '取消关注', value: 5 },\r\n    ];\r\n    employees: Employee[] = [];\r\n    //用于删除框的员工名称显示\r\n    employeeName: string = ''\r\n    constructor(injector: Injector, private employeeService: EmployeesServiceProxy, private modal: NzModalService) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    ngOnInit(): void {\r\n        this.refreshData();\r\n    }\r\n\r\n    /**\r\n     * 分页获取员工信息\r\n     * @param reset 是否刷新页面\r\n     */\r\n    refreshData(reset = false) {\r\n        if (reset) {\r\n            this.q.pi = 1;\r\n        }\r\n        this.loading = true;\r\n        this.employeeService.getAll((this.q.pi - 1) * this.q.ps, this.q.ps, this.q.search).subscribe((result: PagedResultDtoOfEmployee) => {\r\n            this.loading = false;\r\n            let status = 0;\r\n            this.employees = result.items.map(i => {\r\n                if (i.isAction) {\r\n                    status = 0;\r\n                } else {\r\n                    status = 0;\r\n                }\r\n                const statusItem = this.status[status];\r\n                i.activeText = statusItem.text;\r\n                i.activeType = statusItem.type;\r\n                i.positionName = this.positions[i.position - 1].text;\r\n                return i;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 删除单个员工\r\n     * @param employee 员工实体\r\n     * @param contentTpl 弹框id\r\n     */\r\n    delete(employee: Employee, contentTpl): void {\r\n        this.employeeName = employee.name;\r\n        this.modal.confirm({\r\n            content: contentTpl,\r\n            okText: '是',\r\n            cancelText: '否',\r\n            onOk: () => {\r\n                this.employeeService.delete(employee.id).subscribe(() => {\r\n                    this.notify.info(this.l('删除成功！'));\r\n                    this.refreshData();\r\n                })\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n    /**\r\n     * 打开新建员工模态框\r\n     */\r\n    createEmployee() {\r\n\r\n    }\r\n    /**\r\n     * 打开编辑员工模态框\r\n     */\r\n    editEmployee() {\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/markeeting-serve/employees/employees.component.ts","module.exports = \"<pro-header [title]=\\\"formTitle\\\">\\r\\n    <ng-template #logo>\\r\\n        <img src=\\\"https://gw.alipayobjects.com/zos/rmsportal/nxkuOJlFJuAUhzlMTCEe.png\\\">\\r\\n    </ng-template>\\r\\n    <ng-template *ngIf=\\\"form\\\" #action>\\r\\n        <button nz-button [nzSize]=\\\"'large'\\\" *ngIf=\\\"form.status == 1 || form.status == 2 || form.status == 3\\\">取消</button>\\r\\n        <button nz-button [nzSize]=\\\"'large'\\\" *ngIf=\\\"form.status == 1 || form.status == 2\\\">拒绝</button>\\r\\n        <button nz-button [nzType]=\\\"'primary'\\\" *ngIf=\\\"form.status == 1\\\" [nzSize]=\\\"'large'\\\">初审通过</button>\\r\\n        <button nz-button [nzType]=\\\"'primary'\\\" *ngIf=\\\"form.status == 2\\\" [nzSize]=\\\"'large'\\\">资料回传审核通过</button>\\r\\n    </ng-template>\\r\\n    <ng-template style=\\\"display:none; width:0px;\\\" #extra></ng-template>\\r\\n    <ng-template #content>\\r\\n        <desc-list size=\\\"small\\\" col=\\\"3\\\" *ngIf=\\\"form\\\">\\r\\n            <desc-list-item term=\\\"活动名称\\\">{{form.activityName}}</desc-list-item>\\r\\n            <desc-list-item term=\\\"零售客户\\\">{{form.retailerName}}</desc-list-item>\\r\\n            <desc-list-item term=\\\"客户经理\\\">{{form.managerName}}</desc-list-item>\\r\\n            <desc-list-item term=\\\"申请商品规格\\\">{{form.goodsSpecification}}</desc-list-item>\\r\\n            <desc-list-item term=\\\"申请数量\\\">{{form.num}}</desc-list-item>\\r\\n            <desc-list-item term=\\\"申请人\\\">{{form.creationUser}}</desc-list-item>\\r\\n            <desc-list-item term=\\\"申请时间\\\">{{form.creationTime | _date}}</desc-list-item>\\r\\n            <desc-list-item term=\\\"申请理由\\\">{{form.reason}}</desc-list-item>\\r\\n        </desc-list>\\r\\n    </ng-template>\\r\\n    <ng-template #tab>\\r\\n        <nz-tabset [nzSize]=\\\"'default'\\\">\\r\\n            <nz-tab>\\r\\n                <ng-template #nzTabHeading>详情</ng-template>\\r\\n                <span>\\r\\n                    <nz-card class=\\\"mb-lg\\\">\\r\\n                        <nz-steps [nzCurrent]=\\\"1\\\">\\r\\n                            <nz-step [nzTitle]=\\\"'创建项目'\\\" [nzDescription]=\\\"createDesc\\\">\\r\\n                                <ng-template #createDesc>\\r\\n                                    <p class=\\\"my-sm\\\">曲丽丽\\r\\n                                    </p>\\r\\n                                    <p>2016-12-12 12:32</p>\\r\\n                                </ng-template>\\r\\n                            </nz-step>\\r\\n                            <nz-step [nzTitle]=\\\"'部门初审'\\\" [nzDescription]=\\\"checkedDesc\\\">\\r\\n                                <ng-template #checkedDesc>\\r\\n                                    <p class=\\\"my-sm\\\">周毛毛\\r\\n                                    </p>\\r\\n                                    <a (click)=\\\"msg.success('click')\\\">催一下</a>\\r\\n                                </ng-template>\\r\\n                            </nz-step>\\r\\n                            <nz-step [nzTitle]=\\\"'财务复核'\\\"></nz-step>\\r\\n                            <nz-step [nzTitle]=\\\"'完成'\\\"></nz-step>\\r\\n                        </nz-steps>\\r\\n                        <div class=\\\"steps-content\\\"></div>\\r\\n                    </nz-card>\\r\\n                    <nz-card class=\\\"mb-lg\\\">\\r\\n                        <ng-template #title>\\r\\n                            宴席信息\\r\\n                        </ng-template>\\r\\n                        <ng-template #extra>\\r\\n                            <a>添加/修改</a>\\r\\n                        </ng-template>\\r\\n                        <ng-template #body>\\r\\n                            <desc-list class=\\\"mb-lg\\\" *ngIf=\\\"banquet\\\">\\r\\n                                <desc-list-item term=\\\"区县\\\">{{banquet.area}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"责任人\\\">{{banquet.responsible}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"活动执行人\\\">{{banquet.executor}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"宴席时间\\\">{{banquet.banquetTime}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"宴席地点\\\">{{banquet.position}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"现场人数\\\">{{banquet.num}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"现场效果简述\\\">{{banquet.desc}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"上传时间\\\">{{banquet.creationTime | _date}}</desc-list-item>\\r\\n                                <desc-list-item term=\\\"上传人\\\">{{banquet.userName}}</desc-list-item>\\r\\n                            </desc-list>\\r\\n                            <h4 class=\\\"mb-md\\\">现场照片</h4>\\r\\n                            <nz-list [nzLoading]=\\\"loading\\\" class=\\\"imgList\\\" [nzDataSource]=\\\"list\\\" [nzGrid]=\\\"{gutter: 24, lg: 6, md: 8, sm: 12, xs: 24 }\\\">\\r\\n                                <ng-template #item let-item>\\r\\n                                    <nz-list-item>\\r\\n                                        <img alt=\\\"{{item.title}}\\\" src=\\\"{{item.cover}}\\\">\\r\\n                                    </nz-list-item>\\r\\n                                </ng-template>\\r\\n                            </nz-list>\\r\\n                        </ng-template>\\r\\n                    </nz-card>\\r\\n                </span>\\r\\n            </nz-tab>\\r\\n            <nz-tab>\\r\\n                <ng-template #nzTabHeading>收货信息</ng-template>\\r\\n                <nz-card class=\\\"mb-lg\\\">\\r\\n                    <ng-template #title>\\r\\n                        邮寄地址\\r\\n                    </ng-template>\\r\\n                    <ng-template #extra>\\r\\n                        <a>修改</a>\\r\\n                    </ng-template>\\r\\n                    <ng-template #body>\\r\\n                        <desc-list class=\\\"mb-lg\\\" *ngIf=\\\"delivery\\\">\\r\\n                            <desc-list-item term=\\\"消费者姓名\\\">{{delivery.userName}}</desc-list-item>\\r\\n                            <desc-list-item term=\\\"邮寄地址\\\">{{delivery.address}}</desc-list-item>\\r\\n                            <desc-list-item term=\\\"联系电话\\\">{{delivery.phone}}</desc-list-item>\\r\\n                        </desc-list>\\r\\n                    </ng-template>\\r\\n                </nz-card>\\r\\n            </nz-tab>\\r\\n        </nz-tabset>\\r\\n    </ng-template>\\r\\n</pro-header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form-detail/activity-form-detail.component.html\n// module id = ../../../../../src/app/admin/marketing/activity-form-detail/activity-form-detail.component.html\n// module chunks = admin.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".imgList img {\\n  margin-left: 5px;\\n  margin-right: 5px;\\n  margin-bottom: 5px;\\n  width: 100%; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form-detail/activity-form-detail.component.scss\n// module id = ../../../../../src/app/admin/marketing/activity-form-detail/activity-form-detail.component.scss\n// module chunks = admin.module","import { Component, OnInit } from '@angular/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ActivityFormDto, ActivityBanquetDto, ActivityDeliveryInfoDto } from '@shared/service-proxies/entity';\r\nimport { ActivityFormServiceProxy } from '@shared/service-proxies/marketing-service/activity-form-service';\r\nimport { ActivityBanquetServiceProxy, ActivityDeliveryInfoServiceProxy } from '@shared/service-proxies/marketing-service';\r\n\r\n@Component({\r\n    selector: 'activity-form-detail',\r\n    templateUrl: './activity-form-detail.component.html',\r\n    styleUrls: ['./activity-form-detail.component.scss']\r\n})\r\nexport class ActivityFormDetailComponent implements OnInit {\r\n    formId: string;\r\n    form: ActivityFormDto;\r\n    formTitle: string;\r\n    banquet: ActivityBanquetDto;\r\n    delivery: ActivityDeliveryInfoDto;\r\n\r\n    list: any[] = [];\r\n    loading = true;\r\n\r\n    constructor(public msg: NzMessageService, private http: _HttpClient,\r\n        public route: ActivatedRoute,\r\n        private activityFormService: ActivityFormServiceProxy,\r\n        private activityBanquetService: ActivityBanquetServiceProxy,\r\n        private activityDeliveryService: ActivityDeliveryInfoServiceProxy\r\n    ) {\r\n        this.formId = this.route.snapshot.params['id'];\r\n        //alert( this.formId);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        //表单\r\n        this.activityFormService.get(this.formId).subscribe(result => {\r\n            this.form = result;\r\n            this.formTitle = '单号：' + this.form.formCode + ' 状态：' + this.form.statusName;\r\n        });\r\n\r\n        //宴席信息\r\n        this.banquet = ActivityBanquetDto.fromJS({ area: '宜宾城区' });\r\n        this.loading = true;\r\n        this.http.get('/api/list', { count: 4 }).subscribe((res: any) => {\r\n            this.list = this.list.concat(res).map(item => {\r\n                return item;\r\n            });\r\n            this.loading = false;\r\n        });\r\n\r\n        this.activityBanquetService.getByFormId(this.formId).subscribe(result => {\r\n            this.banquet = result;\r\n        });\r\n\r\n        //收货信息\r\n        this.activityDeliveryService.getByFormId(this.formId).subscribe(result => {\r\n            this.delivery = result;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form-detail/activity-form-detail.component.ts","module.exports = \"<pro-header></pro-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n    <form nz-form (ngSubmit)=\\\"refreshData()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n        <div nz-row [nzGutter]=\\\"24\\\">\\r\\n            <div nz-col [nzSpan]=\\\"6\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"formCode\\\">申请单号</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-input [nzSize]=\\\"'large'\\\" name=\\\"formCode\\\" nzId=\\\"formCode\\\" [(ngModel)]=\\\"parameters.formCode\\\" [nzPlaceHolder]=\\\"'申请单号'\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"6\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"beginDate\\\">开始日期</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-datepicker [nzSize]=\\\"'large'\\\" name=\\\"beginDate\\\" [nzPlaceHolder]=\\\"'请输入开始日期'\\\" [(ngModel)]=\\\"parameters.beginDate\\\" nzId=\\\"beginDate\\\" class=\\\"d-block\\\"></nz-datepicker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"6\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"endDate\\\">结束日期</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-datepicker [nzSize]=\\\"'large'\\\" name=\\\"endDate\\\" [nzPlaceHolder]=\\\"'请输入结束日期'\\\" [(ngModel)]=\\\"parameters.endDate\\\" nzId=\\\"endDate\\\" class=\\\"d-block\\\"></nz-datepicker>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"6\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"status\\\">审批状态</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-select [nzPlaceHolder]=\\\"'请选择'\\\" name=\\\"status\\\" nzId=\\\"status\\\" [nzShowSearch]=\\\"true\\\" [(ngModel)]=\\\"parameters.status\\\" [nzSize]=\\\"'large'\\\">\\r\\n                            <nz-option *ngFor=\\\"let i of statusList; let idx = index\\\" [nzLabel]=\\\"i.text\\\" [nzValue]=\\\"i.value\\\"></nz-option>\\r\\n                        </nz-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"16\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"filter\\\">关  键  字</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-input [nzSize]=\\\"'large'\\\" name=\\\"filter\\\" nzId=\\\"filter\\\" [(ngModel)]=\\\"parameters.filter\\\" [nzPlaceHolder]=\\\"'活动名称、零售户、客户经理'\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n                <button nz-button type=\\\"submit\\\" [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"loading\\\" [nzSize]=\\\"'large'\\\">查询</button>\\r\\n                <button nz-button type=\\\"reset\\\" (click)=\\\"refreshData()\\\" [nzSize]=\\\"'large'\\\" class=\\\"mx-sm\\\">重置</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <nz-table #nzTable [nzAjaxData]=\\\"data\\\" [nzTotal]=\\\"query.total\\\" [(nzPageIndex)]=\\\"query.pageIndex\\\" [(nzPageSize)]=\\\"query.pageSize\\\" [nzLoading]=\\\"loading\\\"\\r\\n        [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"refreshData()\\\" (nzPageSizeChange)=\\\"refreshData()\\\">\\r\\n        <thead nz-thead>\\r\\n            <tr>\\r\\n                <th nz-th>\\r\\n                    <span>申请单号</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>活动名称</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>零售户</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>客户经理</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>商品规格</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>申请数量</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>申请理由</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>状态</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>申请时间</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>操作</span>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody nz-tbody>\\r\\n            <tr nz-tbody-tr *ngFor=\\\"let activityForm of nzTable.data\\\">\\r\\n                <td nz-td>{{activityForm.formCode}}</td>\\r\\n                <td nz-td>{{activityForm.activityName}}</td>\\r\\n                <td nz-td>{{activityForm.retailerName}}</td>\\r\\n                <td nz-td>{{activityForm.managerName}}</td>\\r\\n                <td nz-td>{{activityForm.goodsSpecification}}</td>\\r\\n                <td nz-td>{{activityForm.num}}</td>\\r\\n                <td nz-td>{{activityForm.reason}}</td>\\r\\n                <td nz-td><nz-badge [nzStatus]=\\\"activityForm.statusType\\\" [nzText]=\\\"activityForm.statusName\\\"></nz-badge></td>\\r\\n                <td nz-td>{{activityForm.creationTime | _date}}</td>\\r\\n                <td nz-td>\\r\\n                    <a (click)=\\\"goDetail(activityForm.id)\\\" >查看详细</a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n</nz-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form/activity-form.component.html\n// module id = ../../../../../src/app/admin/marketing/activity-form/activity-form.component.html\n// module chunks = admin.module","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { ActivityFormDto, Parameter } from '@shared/service-proxies/entity';\r\nimport { ActivityFormServiceProxy, PagedResultDtoOfActivityForm } from '@shared/service-proxies/marketing-service/activity-form-service';\r\n\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-page-activity-form',\r\n    templateUrl: './activity-form.component.html'\r\n})\r\nexport class ActivityFormComponent extends AppComponentBase implements OnInit {\r\n    data: ActivityFormDto[] = [];\r\n    loading = false;\r\n    parameters: any = { beginDate: null, endDate: null };\r\n\r\n    statusList = [\r\n        { text: '提交申请', value: 1, type: 'error' },\r\n        { text: '初审通过', value: 2, type: 'processing' },\r\n        { text: '拒绝', value: 3, type: 'default' },\r\n        { text: '取消', value: 3, type: 'default' },\r\n        { text: '完成', value: 4, type: 'success' }\r\n    ];\r\n\r\n    constructor(injector: Injector, public msg: NzMessageService, private _ActivityFormService: ActivityFormServiceProxy, private _router: Router) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.refreshData();\r\n    }\r\n\r\n    refreshData(reset = false) {\r\n        if (reset) {\r\n            this.query.pageIndex = 1;\r\n        }\r\n        this.loading = true;\r\n\r\n        this._ActivityFormService.getAll(this.query.skipCount(), this.query.pageSize, this.getParameter()).subscribe((result: PagedResultDtoOfActivityForm) => {\r\n            this.loading = false;\r\n            let status = 0;\r\n            this.query.total = result.totalCount;\r\n            this.data = result.items;\r\n        })\r\n    };\r\n\r\n    getParameter(): Parameter[] {\r\n        let parray = [];\r\n        parray.push(Parameter.fromJS({ key: 'FormCode', value: this.parameters.formCode }));\r\n        parray.push(Parameter.fromJS({ key: 'BeginDate', value: this.dateFormat(this.parameters.beginDate) }));\r\n        parray.push(Parameter.fromJS({ key: 'EndDate', value: this.dateFormat(this.parameters.endDate) }));\r\n        parray.push(Parameter.fromJS({ key: 'Status', value: this.parameters.status }));\r\n        parray.push(Parameter.fromJS({ key: 'Filter', value: this.parameters.filter }));\r\n        return parray;\r\n    }\r\n\r\n    goDetail(id: string) {\r\n        this._router.navigate(['admin/activity-form-detail', id]);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/marketing/activity-form/activity-form.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"form\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_create_role\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'创建角色'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\"\\r\\n        [nzFooter]=\\\"modalFooter\\\" (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"rolename\\\" nz-form-item-required>角色名</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                    <nz-input formControlName=\\\"name\\\" [(ngModel)]=\\\"role.name\\\" nzPlaceHolder=\\\"输入大于等于2并小于等于32的字符\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('minlength')\\\">字符长度大于等于2</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入角色名</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"displayName\\\" nz-form-item-required>角色显示</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('displayName')\\\">\\r\\n                    <nz-input formControlName=\\\"displayName\\\" [(ngModel)]=\\\"role.displayName\\\" nzPlaceHolder=\\\"请输入小于等于32的字符\\\" [nzId]=\\\"'displayName'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('displayName').dirty&&getFormControl('displayName').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('displayName').dirty&&getFormControl('displayName').hasError('minlength')\\\">字符长度大于等于2</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('displayName').dirty&&getFormControl('displayName').hasError('required')\\\">请输入角色显示名</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"description\\\" nz-form-item-required>角色描述</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('description')\\\">\\r\\n                    <nz-input formControlName=\\\"description\\\" [(ngModel)]=\\\"role.description\\\" [nzId]=\\\"'description'\\\"></nz-input>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                权限控制\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                <label nz-checkbox formControlName=\\\"permissiongroup\\\" *ngFor=\\\"let permission of permissions.items\\\" [(ngModel)]=\\\"permission.checked\\\">\\r\\n                    <span>{{permission.displayName}}</span>\\r\\n                </label>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                {{l(\\\"Cancel\\\")}}\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                {{l(\\\"Save\\\")}}\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/create-role/create-role.component.html\n// module id = ../../../../../src/app/admin/roles/create-role/create-role.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\r\n//import { ModalDirective } from 'ngx-bootstrap';\r\nimport { RoleServiceProxy, CreateRoleDto, ListResultDtoOfPermissionDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, AsyncValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n//import * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'create-role-modal',\r\n    templateUrl: './create-role.component.html'\r\n})\r\nexport class CreateRoleComponent extends AppComponentBase implements OnInit {\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    modalVisible = false;\r\n    isConfirmLoading = false;\r\n\r\n    permissions: ListResultDtoOfPermissionDto = null;\r\n    role: CreateRoleDto = null;\r\n\r\n    form: FormGroup;\r\n    roles: any = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _roleService: RoleServiceProxy,\r\n        private fb: FormBuilder\r\n    ) {\r\n        super(injector);\r\n    }\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this._roleService.getAllPermissions()\r\n            .subscribe((permissions: ListResultDtoOfPermissionDto) => {\r\n                this.permissions = permissions;\r\n                this.permissions.items.forEach(element => {\r\n                    element.checked = true;\r\n                });\r\n            });\r\n\r\n        this.form = this.fb.group({\r\n            name: [null, Validators.compose([Validators.required, Validators.maxLength(32), Validators.minLength(2)])],\r\n            displayName: [null, Validators.compose([Validators.required, Validators.maxLength(32), Validators.minLength(2)])],\r\n            description: [null],\r\n            permissiongroup: [null]\r\n        }, );\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    show(): void {\r\n        this.role = new CreateRoleDto();\r\n        this.role.init({ isStatic: false });\r\n        this.modalVisible = true;\r\n    }\r\n    /**\r\n     * 保存角色信息\r\n     */\r\n    save(): void {\r\n        for (const i in this.form.controls) {\r\n            this.form.controls[i].markAsDirty();\r\n        }\r\n        console.log('log', this.form.value);\r\n        if (this.form.valid) {\r\n            var permissions = [];\r\n\r\n            this.permissions.items.forEach((permission) => {\r\n                if (permission.checked) {\r\n                    permissions.push(permission.name);\r\n                }\r\n            });\r\n\r\n            this.role.permissions = permissions;\r\n            this.isConfirmLoading = true;\r\n            this._roleService.create(this.role)\r\n                .finally(() => { this.isConfirmLoading = false; })\r\n                .subscribe(() => {\r\n                    this.notify.info(this.l('保存成功！'));\r\n                    this.close();\r\n                    this.modalSave.emit(null);\r\n                });\r\n        }\r\n    }\r\n    /**\r\n     * 关闭模态框\r\n     */\r\n    close(): void {\r\n        this.modalVisible = false;\r\n        //this.modal.hide();\r\n    }\r\n    /**\r\n     * 取消按钮事件\r\n     */\r\n    handleCancel = (e) => {\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n        this.reset(e);\r\n    }\r\n\r\n\r\n    getFormControl(name: string) {\r\n        return this.form.controls[name];\r\n    }\r\n\r\n    reset(e?): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.form.reset();\r\n        for (const key in this.form.controls) {\r\n            this.form.controls[key].markAsPristine();\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/create-role/create-role.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"form\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_create_role\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'创建角色'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\"\\r\\n        [nzFooter]=\\\"modalFooter\\\" (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"rolename\\\" nz-form-item-required>角色名</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                    <nz-input formControlName=\\\"name\\\" [(ngModel)]=\\\"role.name\\\" nzPlaceHolder=\\\"输入大于等于2并小于等于32的字符\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('minlength')\\\">字符长度大于等于2</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入角色名</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"displayName\\\" nz-form-item-required>角色显示</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('displayName')\\\">\\r\\n                    <nz-input formControlName=\\\"displayName\\\" [(ngModel)]=\\\"role.displayName\\\" nzPlaceHolder=\\\"请输入小于等于32的字符\\\" [nzId]=\\\"'displayName'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('displayName').dirty&&getFormControl('displayName').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('displayName').dirty&&getFormControl('displayName').hasError('minlength')\\\">字符长度大于等于2</div>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('displayName').dirty&&getFormControl('displayName').hasError('required')\\\">请输入角色显示名</div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"description\\\" nz-form-item-required>角色描述</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('description')\\\">\\r\\n                    <nz-input formControlName=\\\"description\\\" [(ngModel)]=\\\"role.description\\\" [nzId]=\\\"'description'\\\"></nz-input>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                权限控制\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                <!-- <label nz-checkbox formControlName=\\\"permissiongroup\\\" *ngFor=\\\"let permission of permissions.items\\\" [(ngModel)]=\\\"permission.checked\\\">\\r\\n                    <span>{{permission.displayName}}</span>\\r\\n                </label> -->\\r\\n                <nz-checkbox-group formControlName=\\\"editpermissiongroup\\\" [(ngModel)]=\\\"permissionsConvert\\\" ></nz-checkbox-group>\\r\\n            </div>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                {{l(\\\"Cancel\\\")}}\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                {{l(\\\"Save\\\")}}\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/edit-role/edit-role.component.html\n// module id = ../../../../../src/app/admin/roles/edit-role/edit-role.component.html\n// module chunks = admin.module","import { Component, OnInit, Output, EventEmitter, Injector } from '@angular/core';\r\nimport { RoleServiceProxy, ListResultDtoOfPermissionDto, CreateRoleDto, RoleDto } from '@shared/service-proxies/service-proxies';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'edit-role-modal',\r\n    templateUrl: 'edit-role.component.html',\r\n})\r\nexport class EditRoleComponent extends AppComponentBase implements OnInit {\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    loading: boolean = false;\r\n    modalVisible: boolean = false;\r\n    isConfirmLoading = false;\r\n    //form表单\r\n    form: FormGroup;\r\n    //所有权限\r\n    permissions: ListResultDtoOfPermissionDto = null;\r\n    //权限(用于权限数据格式转换)\r\n    permissionsConvert: any[];\r\n    //当前角色\r\n    role: RoleDto = null;\r\n    constructor(injector: Injector, private service: RoleServiceProxy, private fb: FormBuilder,\r\n    ) {\r\n        super(injector);\r\n        // this.role=new CreateRoleDto();\r\n        // this.permissions=new ListResultDtoOfPermissionDto();\r\n    }\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n\r\n        this.getPermissionAll();\r\n        this.form = this.fb.group({\r\n            name: [null, Validators.compose([Validators.required, Validators.maxLength(32), Validators.minLength(2)])],\r\n            displayName: [null, Validators.compose([Validators.required, Validators.maxLength(32), Validators.minLength(2)])],\r\n            description: [null],\r\n            editpermissiongroup: [null]\r\n        }, );\r\n    }\r\n    /**\r\n     * 页面初始显示\r\n     * @param id 角色id\r\n     */\r\n    show(id: number): void {\r\n        this.modalVisible = true;\r\n        this.role = new RoleDto();\r\n        this.role.init({\r\n            isStatic: false\r\n        });\r\n        //角色数据获取\r\n        this.service.get(id)\r\n            .subscribe(\r\n                (result) => {\r\n                    this.role = result;\r\n                    this.permissionsConvert = this.permissions.items.map(i => { return { label: i.displayName, value: i.id, checked: true,name:i.name}; });\r\n                    console.log(this.permissions.items);\r\n                    this.roleInPerssion();\r\n                    this.loading = false;\r\n                });\r\n    }\r\n\r\n    /**\r\n     * 将角色存在的权限设为选中\r\n     */\r\n    roleInPerssion() {\r\n        this.permissionsConvert.forEach(permissiond => {\r\n            if (this.role.permissions.indexOf(permissiond.name) !== -1) {\r\n                permissiond.checked = true;\r\n            } else {\r\n                permissiond.checked = false;\r\n            }\r\n        });\r\n        console.log(this.permissions);\r\n    }\r\n    /**\r\n     * 获取权限信息\r\n     */\r\n    getPermissionAll() {\r\n        this.service.getAllPermissions()\r\n            .subscribe((permissions: ListResultDtoOfPermissionDto) => {\r\n                this.permissions = permissions;\r\n                this.permissionsConvert = this.permissions.items.map(i => { return { label: i.displayName, value: i.id, checked: true,name:i.name }; });\r\n            });\r\n    }\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    getFormControl(name: string) {\r\n        return this.form.controls[name];\r\n    }\r\n\r\n    /**\r\n     * 取消按钮事件\r\n     */\r\n    handleCancel = (e) => {\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n\r\n    }\r\n\r\n    /**\r\n     * 取消按钮事件\r\n     * @param e \r\n     */\r\n    reset(e?): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.form.reset();\r\n        for (const key in this.form.controls) {\r\n            this.form.controls[key].markAsPristine();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 保存角色信息\r\n     */\r\n    save(): void {\r\n        for (const i in this.form.controls) {\r\n            this.form.controls[i].markAsDirty();\r\n        }\r\n        console.log('log', this.form.value);\r\n        if (this.form.valid) {\r\n            var permissions = [];\r\n\r\n            this.permissionsConvert.forEach((permission) => {\r\n                if (permission.checked) {\r\n                    permissions.push(permission.name);\r\n                }\r\n            });\r\n\r\n            this.role.permissions = permissions;\r\n            this.isConfirmLoading = true;\r\n            this.service.update(this.role)\r\n                .finally(() => { this.isConfirmLoading = false; })\r\n                .subscribe(() => {\r\n                    this.notify.info(this.l('保存成功！'));\r\n                    this.close();\r\n                    this.modalSave.emit(null);\r\n                });\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.modalVisible = false;\r\n        //this.modal.hide();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/edit-role/edit-role.component.ts","module.exports = \"<pro-header></pro-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n    <div nz-row [nzGutter]=\\\"24\\\">\\r\\n        <ng-template #modelContent>\\r\\n            <h2>是否删除角色{{roleName}}?</h2>\\r\\n        </ng-template>\\r\\n        <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"createRole()\\\" [nzSize]=\\\"'large'\\\">\\r\\n                <i class=\\\"anticon anticon-plus\\\"></i>\\r\\n                <span>新建</span>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n    <nz-table #nzTable [nzAjaxData]=\\\"roles\\\" [nzTotal]=\\\"q.total\\\" [(nzPageIndex)]=\\\"q.pi\\\" [(nzPageSize)]=\\\"q.ps\\\" [nzLoading]=\\\"loading\\\"\\r\\n        [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"refreshData()\\\" (nzPageSizeChange)=\\\"refreshData()\\\">\\r\\n        <thead nz-thead>\\r\\n            <tr>\\r\\n                <th nz-th>\\r\\n                    <span>角色名</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>角色显示</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>操作</span>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody nz-tbody>\\r\\n            <tr nz-tbody-tr *ngFor=\\\"let role of nzTable.data\\\">\\r\\n                <td nz-td>{{role.name}}</td>\\r\\n                <td nz-td>{{role.displayName}}</td>\\r\\n                <td nz-td>\\r\\n                    <a (click)=\\\"editRole(role)\\\">编辑</a>\\r\\n                    <span nz-table-divider></span>\\r\\n                    <a (click)=\\\"delete(role,modelContent)\\\">删除</a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n</nz-card>\\r\\n<create-role-modal #createRoleModal (modalSave)=\\\"refreshData()\\\"></create-role-modal>\\r\\n<edit-role-modal #editRoleModal (modalSave)=\\\"refreshData()\\\"></edit-role-modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/roles.component.html\n// module id = ../../../../../src/app/admin/roles/roles.component.html\n// module chunks = admin.module","import { Component, Injector, ViewChild, OnInit } from '@angular/core';\r\nimport { PagedListingComponentBase, PagedRequestDto } from \"@shared/paged-listing-component-base\";\r\nimport { RoleServiceProxy, RoleDto, PagedResultDtoOfRoleDto } from \"@shared/service-proxies/service-proxies\";\r\n//import { appModuleAnimation } from '@shared/animations/routerTransition';\r\nimport { CreateRoleComponent } from \"../roles/create-role/create-role.component\";\r\nimport { EditRoleComponent } from './edit-role/edit-role.component';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { NzModalService, NzMessageService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n\ttemplateUrl: './roles.component.html'//,\r\n\t//animations: [appModuleAnimation()]\r\n})\r\nexport class RolesComponent extends AppComponentBase implements OnInit {\r\n\r\n\r\n\t@ViewChild('createRoleModal') createRoleModal: CreateRoleComponent;\r\n\t@ViewChild('editRoleModal') editRoleModal: EditRoleComponent;\r\n\tq: any = {\r\n\t\tpi: 1,\r\n\t\tps: 10,\r\n\t\ttotal: 0,\r\n\t\tsorter: '',\r\n\t\tstatus: -1,\r\n\t\tstatusList: []\r\n\t};\r\n\tloading = false;\r\n\troles: RoleDto[] = [];\r\n\t//用于显示删除文本角色名\r\n\troleName: string = '';\r\n\tconstructor(\r\n\t\tprivate injector: Injector,\r\n\t\tprivate rolesService: RoleServiceProxy,\r\n\t\tprivate modal: NzModalService,\r\n\t\tprivate msg: NzMessageService\r\n\t) {\r\n\t\tsuper(injector);\r\n\t}\r\n\t/**\r\n\t * 页面初始加载\r\n\t */\r\n\tngOnInit(): void {\r\n\t\tthis.refreshData();\r\n\t}\r\n\t// list(request: PagedRequestDto, pageNumber: number, finishedCallback: Function): void {\r\n\t// \tthis.rolesService.getAll(request.skipCount, request.maxResultCount)\r\n\t// \t\t.finally(() => {\r\n\t// \t\t\tfinishedCallback();\r\n\t// \t\t})\r\n\t// \t\t.subscribe((result: PagedResultDtoOfRoleDto) => {\r\n\t// \t\t\tthis.roles = result.items;\r\n\t// \t\t\tthis.showPaging(result, pageNumber);\r\n\t// \t\t});\r\n\t// }\r\n\r\n\t/**\r\n\t * 分页获取角色信息\r\n\t * @param reset 是否刷新页面\r\n\t */\r\n\trefreshData(reset = false) {\r\n\t\tif (reset) {\r\n\t\t\tthis.q.pi = 1;\r\n\t\t}\r\n\t\tthis.loading = true;\r\n\t\tthis.rolesService.getAll((this.q.pi - 1) * this.q.ps, this.q.ps).subscribe((result: PagedResultDtoOfRoleDto) => {\r\n\t\t\tthis.loading = false;\r\n\t\t\tlet status = 0;\r\n\t\t\tthis.roles = result.items;\r\n\t\t\tthis.q.total = result.totalCount;\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * 删除单个角色\r\n\t * @param role 角色信息\r\n\t * @param contentTpl 删除框id\r\n\t */\r\n\tdelete(role: RoleDto, contentTpl): void {\r\n\t\tthis.roleName = role.displayName;\r\n\t\tthis.modal.confirm({\r\n\t\t\tcontent: contentTpl,\r\n\t\t\tokText: '是',\r\n\t\t\tcancelText: '否',\r\n\t\t\tonOk: () => {\r\n\t\t\t\tthis.rolesService.delete(role.id)\r\n\t\t\t\t\t.subscribe(() => {\r\n\t\t\t\t\t\tthis.notify.info(this.l('删除成功！'));\r\n\t\t\t\t\t\tthis.refreshData();\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tonCancel: () => {\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t// delete(role: RoleDto): void {\r\n\t// \tabp.message.confirm(\r\n\t// \t\t\"Remove Users from Role and delete Role '\" + role.displayName + \"'?\",\r\n\t// \t\t\"Permanently delete this Role\",\r\n\t// \t\t(result: boolean) => {\r\n\t// \t\t\tif (result) {\r\n\t// \t\t\t\tthis.rolesService.delete(role.id)\r\n\t// \t\t\t\t\t.finally(() => {\r\n\t// \t\t\t\t\t\tabp.notify.info(\"Deleted Role: \" + role.displayName);\r\n\t// \t\t\t\t\t\tthis.refresh();\r\n\t// \t\t\t\t\t})\r\n\t// \t\t\t\t\t.subscribe(() => { });\r\n\t// \t\t\t}\r\n\t// \t\t}\r\n\t// \t);\r\n\t// }\r\n\r\n\t/**\r\n\t * 显示新增Modal\r\n\t */\r\n\tcreateRole(): void {\r\n\t\tthis.createRoleModal.show();\r\n\t}\r\n\t/**\r\n\t * 显示编辑Modal\r\n\t * @param role 角色实体\r\n\t */\r\n\teditRole(role: RoleDto): void {\r\n\t\tthis.editRoleModal.show(role.id);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/roles/roles.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"form\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_create_tenant\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'创建用户'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\" [nzFooter]=\\\"modalFooter\\\"\\r\\n        (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n\\r\\n            <ng-template #nzTabHeading>\\r\\n                租户信息\\r\\n            </ng-template>\\r\\n            <fieldset>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"tenancyName\\\" nz-form-item-required>租户名</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('tenancyName')\\\">\\r\\n                        <nz-input formControlName=\\\"tenancyName\\\" [(ngModel)]=\\\"tenant.tenancyName\\\" nzPlaceHolder=\\\"输入大于等于1并小于等于64的字符\\\" [nzId]=\\\"'tenancyName'\\\"></nz-input>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('tenancyName').dirty&&getFormControl('tenancyName').hasError('maxlength')\\\">字符长度小于等于64</div>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('tenancyName').dirty&&getFormControl('tenancyName').hasError('minlength')\\\">字符长度大于等于1</div>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('tenancyName').dirty&&getFormControl('tenancyName').hasError('required')\\\">请输入租户名</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"name\\\" nz-form-item-required>名称</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                        <nz-input formControlName=\\\"name\\\" [(ngModel)]=\\\"tenant.name\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于128</div>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入名称</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"adminEmailAddress\\\">邮箱地址</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('adminEmailAddress')\\\">\\r\\n                        <nz-input formControlName=\\\"adminEmailAddress\\\" [(ngModel)]=\\\"tenant.adminEmailAddress\\\" [nzId]=\\\"'adminEmailAddress'\\\"></nz-input>\\r\\n                        <div nz-form-explain *ngIf=\\\"getFormControl('adminEmailAddress').dirty &&getFormControl('adminEmailAddress').hasError('email')\\\">邮箱地址无效</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"connectionString\\\">连接字符串</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('connectionString')\\\">\\r\\n                        <nz-input formControlName=\\\"connectionString\\\" [(ngModel)]=\\\"tenant.connectionString\\\" [nzType]=\\\"'connectionString'\\\" [nzId]=\\\"'connectionString'\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-control nz-col [nzSpan]=\\\"20\\\" [nzOffset]=\\\"4\\\">\\r\\n                        <label nz-checkbox formControlName=\\\"isactive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\r\\n                            <span>启用</span>\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <p>默认密码为：123qwe</p>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                取消\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                保存\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/create-tenant/create-tenant.component.html\n// module id = ../../../../../src/app/admin/tenant/create-tenant/create-tenant.component.html\n// module chunks = admin.module","import { Component, Output, EventEmitter, Injector, OnInit } from '@angular/core';\r\nimport { CreateTenantDto, TenantServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'create-tenant-modal',\r\n    templateUrl: 'create-tenant.component.html',\r\n})\r\nexport class CreateTenantComponent extends AppComponentBase implements OnInit {\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n    //模态框是否可用\r\n    modalVisible = false;\r\n    isConfirmLoading = false;\r\n\r\n    tenant: CreateTenantDto = null;\r\n\r\n    form: FormGroup;\r\n    constructor(injector: Injector, private _tenantService: TenantServiceProxy, private fb: FormBuilder) {\r\n        super(injector);\r\n    }\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this.form = this.fb.group({\r\n            tenancyName: [null, [Validators.compose([Validators.required, Validators.maxLength(64)])]],\r\n            name: [null, [Validators.compose([Validators.required, Validators.maxLength(128)])]],\r\n            adminEmailAddress: [null, [Validators.email]],\r\n            connectionString: [null],\r\n            isactive: [true]\r\n        }, );\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    show(): void {\r\n        this.reset();\r\n        this.tenant = new CreateTenantDto();\r\n        this.tenant.init({ isActive: true });\r\n        this.modalVisible = true;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    getFormControl(name: string) {\r\n        return this.form.controls[name];\r\n    }\r\n    /**\r\n     * \r\n     * @param e \r\n     */\r\n    reset(e?): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.form.reset();\r\n        for (const key in this.form.controls) {\r\n            this.form.controls[key].markAsPristine();\r\n        }\r\n    }\r\n    /**\r\n     * 取消按钮事件\r\n     */\r\n    handleCancel = (e) => {\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n        this.reset(e);\r\n    }\r\n    /**\r\n     * 保存租户信息\r\n     */\r\n    save(): void {\r\n        for (const i in this.form.controls) {\r\n            this.form.controls[i].markAsDirty();\r\n        }\r\n        if (this.form.valid) {\r\n            this._tenantService.create(this.tenant)\r\n                .finally(() => { this.isConfirmLoading = false; })\r\n                .subscribe(() => {\r\n                    this.notify.info(this.l('保存成功'));\r\n                    this.modalVisible = false;\r\n                    this.modalSave.emit(null);\r\n                });\r\n        }\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/create-tenant/create-tenant.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"form\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_create_tenant\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'创建用户'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\"\\r\\n        [nzFooter]=\\\"modalFooter\\\" (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n           \\r\\n                    <ng-template #nzTabHeading>\\r\\n                       租户信息\\r\\n                    </ng-template>\\r\\n                    <fieldset>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"tenancyName\\\" nz-form-item-required>租户名</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('tenancyName')\\\">\\r\\n                                <nz-input formControlName=\\\"tenancyName\\\" [(ngModel)]=\\\"tenant.tenancyName\\\" nzPlaceHolder=\\\"输入大于等于1并小于等于64的字符\\\" [nzId]=\\\"'tenancyName'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('tenancyName').dirty&&getFormControl('tenancyName').hasError('maxlength')\\\">字符长度小于等于64</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('tenancyName').dirty&&getFormControl('tenancyName').hasError('required')\\\">请输入租户名</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"name\\\" nz-form-item-required>名称</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                                <nz-input formControlName=\\\"name\\\" [(ngModel)]=\\\"tenant.name\\\"  [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于128</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入名称</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-control nz-col [nzSpan]=\\\"20\\\" [nzOffset]=\\\"4\\\">\\r\\n                                <label nz-checkbox formControlName=\\\"isactive\\\" [(ngModel)]=\\\"tenant.isActive\\\">\\r\\n                                    <span>启用</span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                取消\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                保存\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/edit-tenant/edit-tenant.component.html\n// module id = ../../../../../src/app/admin/tenant/edit-tenant/edit-tenant.component.html\n// module chunks = admin.module","import { Component, Output, EventEmitter, OnInit, Injector } from '@angular/core';\r\nimport { TenantDto, TenantServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'edit-tenant-modal',\r\n    templateUrl: 'edit-tenant.component.html',\r\n})\r\nexport class EditTenantComponent extends AppComponentBase implements OnInit {\r\n\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    modalVisible = false;\r\n    isConfirmLoading = false;\r\n    tenant: TenantDto ;\r\n    form: FormGroup;\r\n    constructor(injector: Injector, private _tenantService: TenantServiceProxy, private fb: FormBuilder) {\r\n        super(injector);//来自AppComponentBase\r\n    }\r\n    ngOnInit(): void {\r\n        this.form = this.fb.group({\r\n            tenancyName: [null, [Validators.compose([Validators.required, Validators.maxLength(64)])]],\r\n            name: [null, [Validators.compose([Validators.required, Validators.maxLength(128)])]],\r\n            isactive: [null]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param id 租户id\r\n     */\r\n    show(id: number) {\r\n        this.modalVisible = true;\r\n        this.tenant=new TenantDto();\r\n        this._tenantService.get(id).subscribe((result: TenantDto) => {\r\n            this.tenant = result;\r\n        });\r\n    }\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    getFormControl(name: string) {\r\n        return this.form.controls[name];\r\n    }\r\n\r\n    /**\r\n     * 保存租户更新信息\r\n     */\r\n    save(): void {\r\n        for (const i in this.form.controls) {\r\n            this.form.controls[i].markAsDirty();\r\n        }\r\n        if (this.form.valid) {\r\n            this._tenantService.update(this.tenant)\r\n                .finally(() => { this.isConfirmLoading = false; })\r\n                .subscribe(() => {\r\n                    this.notify.info(this.l('保存成功'));//来自AppComponentBase\r\n                    this.modalVisible = false;\r\n                    this.modalSave.emit(null);\r\n                })\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 取消按钮事件\r\n     */\r\n    handleCancel = (e) => {\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n        this.reset();\r\n    }\r\n    reset(e?): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.form.reset();\r\n        for (const key in this.form.controls) {\r\n            this.form.controls[key].markAsPristine();\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/edit-tenant/edit-tenant.component.ts","module.exports = \"<pro-header></pro-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n    <form nz-form (ngSubmit)=\\\"refreshData()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n        <div nz-row [nzGutter]=\\\"24\\\">\\r\\n            <ng-template #modelContent>\\r\\n                <h2>是否删除租户{{TenantName}}?</h2>\\r\\n            </ng-template>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n                <button nz-button (click)=\\\"createTenant()\\\" [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\">\\r\\n                    <i class=\\\"anticon anticon-plus\\\"></i>\\r\\n                    <span>新建</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <nz-table #nzTable [nzAjaxData]=\\\"tenants\\\" [nzTotal]=\\\"q.total\\\" [(nzPageIndex)]=\\\"q.pi\\\" [(nzPageSize)]=\\\"q.ps\\\" [nzLoading]=\\\"loading\\\"\\r\\n        [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"refreshData()\\\" (nzPageSizeChange)=\\\"refreshData()\\\">\\r\\n        <thead nz-thead>\\r\\n            <tr>\\r\\n                <th nz-th>\\r\\n                    <span>租户名</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>名称</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>启用</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>操作</span>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody nz-tbody>\\r\\n            <tr nz-tbody-tr *ngFor=\\\"let tenant of nzTable.data\\\">\\r\\n                <td nz-td>{{tenant.tenancyName}}</td>\\r\\n                <td nz-td>{{tenant.name}}</td>\\r\\n                <td nz-td>\\r\\n                    <nz-badge [nzStatus]=\\\"tenant.activeType\\\" [nzText]=\\\"tenant.activeText\\\"></nz-badge>\\r\\n                </td>\\r\\n                <td nz-td>\\r\\n                    <a (click)=\\\"editTenant(tenant)\\\">编辑</a>\\r\\n                    <span nz-table-divider></span>\\r\\n                    <a (click)=\\\"delete(tenant,modelContent)\\\">删除</a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n</nz-card>\\r\\n<edit-tenant-modal #editTenantModal (modalSave)=\\\"refreshData()\\\"></edit-tenant-modal>\\r\\n<create-tenant-modal #createTenantModal (modalSave)=\\\"refreshData()\\\"></create-tenant-modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/tenant.component.html\n// module id = ../../../../../src/app/admin/tenant/tenant.component.html\n// module chunks = admin.module","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { PagedRequestDto, PagedListingComponentBase } from '@shared/paged-listing-component-base';\r\nimport { TenantServiceProxy, TenantDto, PagedResultDtoOfTenantDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { CreateTenantComponent } from './create-tenant/create-tenant.component';\r\nimport { EditTenantComponent } from './edit-tenant/edit-tenant.component';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'tenant',\r\n    templateUrl: 'tenant.component.html',\r\n})\r\nexport class TenantComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('createTenantModal') createTenantModal: CreateTenantComponent;\r\n    @ViewChild('editTenantModal') editTenantModal: EditTenantComponent;\r\n    q: any = {\r\n        pi: 1,\r\n        ps: 10,\r\n        total: 0,\r\n        sorter: '',\r\n        status: -1,\r\n        statusList: []\r\n    };\r\n    loading = false;\r\n    status = [\r\n        { text: '启用', value: false, type: 'success' },\r\n        { text: '禁用', value: false, type: 'default' },\r\n    ]\r\n    tenants: TenantDto[] = [];\r\n    //用于删除框租户名显示\r\n    TenantName: string;\r\n\r\n    constructor(injector: Injector, private _tenantService: TenantServiceProxy, private modal: NzModalService) {\r\n        super(injector);\r\n    }\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this.refreshData();\r\n    }\r\n    // list(request: PagedRequestDto, pageNumber: number, finishedCallback: Function): void {\r\n    //     this._tenantService.getAll(request.skipCount, request.maxResultCount)\r\n    //         .finally(() => {\r\n    //             finishedCallback();\r\n    //         })\r\n    //         .subscribe((result: PagedResultDtoOfTenantDto) => {\r\n    //             this.tenants = result.items;\r\n    //             // this.showPaging(result, pageNumber);\r\n    //         });\r\n    // }\r\n\r\n    /**\r\n     * 分页获取租户信息\r\n     * @param reset 是否刷新页面\r\n     */\r\n    refreshData(reset = false) {\r\n        if (reset) {\r\n            this.q.pi = 1;\r\n        }\r\n        this.loading = true;\r\n        this._tenantService.getAll((this.q.pi - 1) * this.q.ps, this.q.ps).subscribe((result: PagedResultDtoOfTenantDto) => {\r\n            this.loading = false;\r\n            let status = 0;\r\n            this.tenants = result.items.map(i => {\r\n                if (i.isActive) {\r\n                    status = 0;\r\n                } else {\r\n                    status = 1\r\n                }\r\n                const statusItem = this.status[status];\r\n                i.activeText = statusItem.text;\r\n                i.activeType = statusItem.type;\r\n                return i;\r\n            });\r\n            this.q.total = result.totalCount;\r\n        });\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 删除单个租户\r\n     * @param tenant 租户信息\r\n     * @param contenTpl 弹框\r\n     */\r\n    delete(tenant: TenantDto, contenTpl): void {\r\n        this.TenantName=tenant.name;\r\n        this.modal.confirm({\r\n            content: contenTpl,\r\n            okText: '是',\r\n            cancelText: '否',\r\n            onOk: () => {\r\n                this._tenantService.delete(tenant.id)\r\n                    .subscribe(() => {\r\n                        this.notify.info(this.l('删除成功'));\r\n                        this.refreshData();\r\n                    });\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 新增租户\r\n     */\r\n    createTenant(): void {\r\n        this.createTenantModal.show();\r\n    }\r\n    /**\r\n     * 更新租户\r\n     * @param tenant 租户id\r\n     */\r\n    editTenant(tenant: TenantDto): void {\r\n        this.editTenantModal.show(tenant.id);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/tenant/tenant.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"form\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_create_user\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'创建用户'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\" [nzFooter]=\\\"modalFooter\\\"\\r\\n        (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n            <nz-tabset>\\r\\n                <nz-tab>\\r\\n                    <ng-template #nzTabHeading>\\r\\n                        用户信息\\r\\n                    </ng-template>\\r\\n                    <fieldset>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"username\\\" nz-form-item-required>账号</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('username')\\\">\\r\\n                                <nz-input formControlName=\\\"username\\\" [(ngModel)]=\\\"user.userName\\\" nzPlaceHolder=\\\"输入大于等于2并小于等于32的字符\\\" [nzId]=\\\"'username'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('username').dirty&&getFormControl('username').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('username').dirty&&getFormControl('username').hasError('minlength')\\\">字符长度大于等于2</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('username').dirty&&getFormControl('username').hasError('required')\\\">请输入账户</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"name\\\" nz-form-item-required>用户名</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"16\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                                <nz-input [nzDisabled]=\\\"isDisablec\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" nzPlaceHolder=\\\"请输入小于等于32的字符\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入姓</div>\\r\\n                            </div>\\r\\n                            <div nz-col [nzSm]=\\\"4\\\" >\\r\\n                                <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"employee()\\\">\\r\\n                                    选择员工\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <!--<div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"surname\\\" nz-form-item-required>{{l(\\\"Surname\\\")}}</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"8\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('surname')\\\">\\r\\n                                <nz-input formControlName=\\\"surname\\\" [(ngModel)]=\\\"user.surname\\\" nzPlaceHolder=\\\"请输入小于等于32的字符\\\" [nzId]=\\\"'surname'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('surname').dirty&&getFormControl('surname').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('surname').dirty&&getFormControl('surname').hasError('required')\\\">请输入名</div>\\r\\n                            </div> -->\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"email\\\" nz-form-item-required>邮箱</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('email')\\\">\\r\\n                                <nz-input formControlName=\\\"email\\\" [(ngModel)]=\\\"user.emailAddress\\\" [nzId]=\\\"'email'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('email').dirty&&getFormControl('email').hasError('email')\\\">邮箱地址无效</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"password\\\" nz-form-item-required>密码</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('password')\\\">\\r\\n                                <nz-input formControlName=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" [nzType]=\\\"'password'\\\" [nzId]=\\\"'password'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('password').dirty&&getFormControl('password').hasError('required')\\\">请输入密码</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"checkPassword\\\" nz-form-item-required>确认密码</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('checkPassword')\\\">\\r\\n                                <nz-input formControlName=\\\"checkPassword\\\" [(ngModel)]=\\\"user.confirmPassword\\\" [nzType]=\\\"'password'\\\" [nzId]=\\\"'checkPassword'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('checkPassword').dirty&&getFormControl('checkPassword').hasError('required')\\\">请确认密码</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('checkPassword').dirty&&getFormControl('checkPassword').hasError('confirm')\\\">两次输入的密码必须一致</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-control nz-col [nzSpan]=\\\"20\\\" [nzOffset]=\\\"4\\\">\\r\\n                                <label nz-checkbox formControlName=\\\"isactive\\\" [(ngModel)]=\\\"user.isActive\\\">\\r\\n                                    <span>启用</span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n                </nz-tab>\\r\\n                <nz-tab>\\r\\n                    <ng-template #nzTabHeading>\\r\\n                        用户角色\\r\\n                    </ng-template>\\r\\n                    <label nz-checkbox formControlName=\\\"rolegroup\\\" *ngFor=\\\"let role of roles\\\" [(ngModel)]=\\\"role.checked\\\">\\r\\n                        <span>{{role.label}}</span>\\r\\n                    </label>\\r\\n                </nz-tab>\\r\\n            </nz-tabset>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                取消\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                保存\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\\r\\n<employee-modal *ngIf=\\\"modalVisible\\\" #selectEmployeeModal (modalSelect)=\\\"getSelectData($event)\\\"></employee-modal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/create-user/create-user.component.html\n// module id = ../../../../../src/app/admin/users/create-user/create-user.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, ElementRef, OnInit } from '@angular/core';\r\n//import { ModalDirective } from 'ngx-bootstrap';\r\nimport { UserServiceProxy, CreateUserDto, RoleDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, AsyncValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { EmployeeModalComponent } from '../employee-modal/employee-modal.component';\r\nimport { Employee } from '@shared/service-proxies/entity/employee';\r\n\r\n//import * as _ from \"lodash\";\r\n\r\n@Component({\r\n    selector: 'create-user-modal',\r\n    templateUrl: './create-user.component.html'\r\n})\r\nexport class CreateUserComponent extends AppComponentBase implements OnInit {\r\n\r\n    //@ViewChild('createUserModal') modal: ModalDirective;\r\n    //@ViewChild('modalContent') modalContent: ElementRef;\r\n    @ViewChild('selectEmployeeModal') selectEmployeeModal: EmployeeModalComponent;\r\n\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    modalVisible = false;\r\n    isConfirmLoading = false;\r\n    isDisablec = false;\r\n    user: CreateUserDto = null;\r\n    //roles: RoleDto[] = null;\r\n\r\n    form: FormGroup;\r\n    //roles: RoleDto[] = null;\r\n    roles: any = [];\r\n\r\n    constructor(\r\n        injector: Injector,\r\n        private _userService: UserServiceProxy,\r\n        private fb: FormBuilder\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this._userService.getRoles()\r\n            .subscribe((result) => {\r\n                this.roles = result.items.map(i => { return { label: i.name, value: i.normalizedName, checked: true }; });\r\n            });\r\n\r\n        this.form = this.fb.group({\r\n            email: [null, [Validators.email]],\r\n            password: [null, [Validators.required]],\r\n            checkPassword: [null, Validators.compose([Validators.required, this.confirmationValidator])],\r\n            //username: [null, Validators.compose([Validators.required, Validators.minLength(2)]), this.nicknameValidator.bind(this)],\r\n            username: [null, Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(32)])],\r\n            name: [null, Validators.compose([Validators.required, Validators.maxLength(32)])],\r\n            //surname: [null, Validators.compose([Validators.required, Validators.maxLength(32)])],\r\n            isactive: [true],\r\n            rolegroup: [true]\r\n        }, );\r\n    }\r\n\r\n    show(): void {\r\n        //this.modal.show();\r\n        this.reset();\r\n        this.user = new CreateUserDto();\r\n        this.user.init({ isActive: true });\r\n        this.roles.forEach(element => {\r\n            element.checked = true;\r\n        });\r\n        this.modalVisible = true;\r\n         //对isDisablec做初始化\r\n         this.isDisablec = false;\r\n    }\r\n\r\n    //onShown(): void {\r\n    //    $.AdminBSB.input.activate($(this.modalContent.nativeElement));\r\n    //}\r\n\r\n    save(isSave = false): void {\r\n\r\n        for (const i in this.form.controls) {\r\n            this.form.controls[i].markAsDirty();\r\n        }\r\n        console.log('log', this.form.value);\r\n        if (this.form.valid) {\r\n            //TODO: Refactor this, don't use jQuery style code\r\n            var roles = [];\r\n\r\n            this.roles.forEach((role) => {\r\n                if (role.checked) {\r\n                    roles.push(role.value);\r\n                }\r\n            });\r\n\r\n            this.user.roleNames = roles;\r\n            this.user.surname = this.user.userName;\r\n            this.isConfirmLoading = true;\r\n            this._userService.create(this.user)\r\n                .finally(() => { this.isConfirmLoading = false; })\r\n                .subscribe(() => {\r\n                    this.notify.info(this.l('保存成功！'));\r\n                    this.close();\r\n                    this.modalSave.emit(null);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    close(): void {\r\n        this.modalVisible = false;\r\n        //this.modal.hide();\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n        this.reset(e);\r\n    }\r\n\r\n    /*nicknameValidator = (control: FormControl): Observable<any> => {\r\n        return control\r\n            .valueChanges\r\n            .debounceTime(500)\r\n            .map((value) => {\r\n                if (value !== 'cipchk') {\r\n                    control.setErrors({ checked: true, error: true });\r\n                    return;\r\n                }\r\n                control.setErrors(null);\r\n            });\r\n    }*/\r\n\r\n    confirmationValidator = (control: FormControl): { [s: string]: boolean } => {\r\n        if (!control.value) {\r\n            return { required: true };\r\n        } else if (control.value !== this.form.controls['password'].value) {\r\n            return { confirm: true, error: true };\r\n        }\r\n    }\r\n\r\n    getFormControl(name: string) {\r\n        return this.form.controls[name];\r\n    }\r\n\r\n    reset(e?): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.form.reset();\r\n        for (const key in this.form.controls) {\r\n            this.form.controls[key].markAsPristine();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示员工列表模态框\r\n     */\r\n    employee(): void {\r\n        this.selectEmployeeModal.show();\r\n    }\r\n    /**\r\n     * 模态框返回\r\n     */\r\n    getSelectData = (employee?: Employee) => {\r\n        //对isDisablec做初始化\r\n        this.isDisablec = false;\r\n        if (employee) {\r\n            if (employee.id) {\r\n                this.isDisablec = true;\r\n            }\r\n            this.user.name = employee.name;\r\n            this.user.employeeId = employee.id;\r\n        }\r\n        for (const key in this.form.controls) {\r\n            if (!this.user[key]) {\r\n                this.form.controls[key].markAsPristine();\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/create-user/create-user.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"eform\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_edit_user\\\" (ngSubmit)=\\\"esave()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'编辑用户'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\" [nzFooter]=\\\"modalFooter\\\"\\r\\n        (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n            <nz-tabset>\\r\\n                <nz-tab>\\r\\n                    <ng-template #nzTabHeading>\\r\\n                        用户信息\\r\\n                    </ng-template>\\r\\n                    <fieldset>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"username\\\" nz-form-item-required>账号</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('username')\\\">\\r\\n                                <nz-input formControlName=\\\"username\\\" [(ngModel)]=\\\"user.userName\\\" nzPlaceHolder=\\\"输入大于等于2并小于等于32的字符\\\" [nzId]=\\\"'username'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('username').dirty&&getFormControl('username').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('username').dirty&&getFormControl('username').hasError('minlength')\\\">字符长度大于等于2</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('username').dirty&&getFormControl('username').hasError('required')\\\">请输入账户</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"name\\\" nz-form-item-required>用户名</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"16\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                                <nz-input [nzDisabled]=\\\"isDisable\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" nzPlaceHolder=\\\"请输入小于等于32的字符\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入姓</div>\\r\\n                            </div>\\r\\n                            <div nz-col [nzSm]=\\\"4\\\">\\r\\n                                <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"employees()\\\">\\r\\n                                    选择员工\\r\\n                                </button>\\r\\n                            </div>\\r\\n                            <!-- <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"surname\\\" nz-form-item-required>{{l(\\\"Surname\\\")}}</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"8\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('surname')\\\">\\r\\n                                <nz-input formControlName=\\\"surname\\\" [(ngModel)]=\\\"user.surname\\\" nzPlaceHolder=\\\"请输入小于等于32的字符\\\" [nzId]=\\\"'surname'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('surname').dirty&&getFormControl('surname').hasError('maxlength')\\\">字符长度小于等于32</div>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('surname').dirty&&getFormControl('surname').hasError('required')\\\">请输入名</div>\\r\\n                            </div> -->\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                                <label for=\\\"email\\\" nz-form-item-required>邮箱</label>\\r\\n                            </div>\\r\\n                            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('email')\\\">\\r\\n                                <nz-input formControlName=\\\"email\\\" [(ngModel)]=\\\"user.emailAddress\\\" [nzId]=\\\"'email'\\\"></nz-input>\\r\\n                                <div nz-form-explain *ngIf=\\\"getFormControl('email').dirty&&getFormControl('email').hasError('email')\\\">邮箱地址无效</div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div nz-form-item nz-row>\\r\\n                            <div nz-form-control nz-col [nzSpan]=\\\"20\\\" [nzOffset]=\\\"4\\\">\\r\\n                                <label nz-checkbox formControlName=\\\"isactive\\\" [(ngModel)]=\\\"user.isActive\\\">\\r\\n                                    <span>启用</span>\\r\\n                                </label>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </fieldset>\\r\\n                </nz-tab>\\r\\n                <nz-tab>\\r\\n                    <ng-template #nzTabHeading>\\r\\n                        用户角色\\r\\n                    </ng-template>\\r\\n                    <!-- <label nz-checkbox formControlName=\\\"editrolegroup\\\" *ngFor=\\\"let role of roles\\\" [(ngModel)]=\\\"role.checked\\\">\\r\\n                        <span>{{role.label}}</span>\\r\\n                    </label> -->\\r\\n                    <nz-checkbox-group formControlName=\\\"editrolegroup\\\" [(ngModel)]=\\\"roles\\\"></nz-checkbox-group>\\r\\n                </nz-tab>\\r\\n            </nz-tabset>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                取消\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                保存\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\\r\\n<employee-modal *ngIf=\\\"modalVisible\\\" #selecteEmployeeModal (modalSelect)=\\\"getSelectData($event)\\\"></employee-modal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/edit-user/edit-user.component.html\n// module id = ../../../../../src/app/admin/users/edit-user/edit-user.component.html\n// module chunks = admin.module","import { Component, ViewChild, Injector, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { UserServiceProxy, UserDto, RoleDto } from '@shared/service-proxies/service-proxies';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { FormGroup, FormBuilder, Validators, FormControl, AsyncValidatorFn, AbstractControl } from '@angular/forms';\r\n\r\nimport * as _ from \"lodash\";\r\nimport { EmployeeModalComponent } from '../employee-modal/employee-modal.component';\r\nimport { Employee } from '@shared/service-proxies/entity/employee';\r\n\r\n@Component({\r\n    selector: 'edit-user-modal',\r\n    templateUrl: './edit-user.component.html'\r\n})\r\nexport class EditUserComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('selecteEmployeeModal') selecteEmployeeModal: EmployeeModalComponent;\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    modalVisible: boolean = false;\r\n    user: UserDto = null;\r\n    userRoles: RoleDto[] = null;\r\n    roles: any = [];\r\n    isConfirmLoading = false;\r\n    eform: FormGroup;\r\n    loading = false;\r\n    isDisable = false;\r\n    constructor(\r\n        injector: Injector,\r\n        private fb: FormBuilder,\r\n        private _userService: UserServiceProxy\r\n    ) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.user = new UserDto();\r\n        this.user.init({ isActive: true });\r\n        this._userService.getRoles()\r\n            .subscribe((result) => {\r\n                this.userRoles = result.items;\r\n                this.roles = this.userRoles.map(i => { return { label: i.name, value: i.normalizedName, checked: true }; });\r\n            });\r\n\r\n        this.eform = this.fb.group({\r\n            email: [null, [Validators.email]],\r\n            username: [null, Validators.compose([Validators.required, Validators.minLength(2), Validators.maxLength(32)])],\r\n            name: [null, Validators.compose([Validators.required, Validators.maxLength(32)])],\r\n            //surname: [null, Validators.compose([Validators.required, Validators.maxLength(32)])],\r\n            isactive: [null],\r\n            editrolegroup: [null]\r\n        }, );\r\n    }\r\n\r\n    userInRole(role: RoleDto, user: UserDto): boolean {\r\n        if (user.roleNames.indexOf(role.normalizedName) !== -1) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    userInRoles() {\r\n        this.roles.forEach(role => {\r\n            if (this.user.roleNames.indexOf(role.value) !== -1) {\r\n                role.checked = true;\r\n            }\r\n            else {\r\n                role.checked = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    show(id: number): void {\r\n        this.modalVisible = true;\r\n        this.loading = true;\r\n        //用户\r\n        this._userService.get(id)\r\n            .subscribe(\r\n                (result) => {\r\n                    this.user = result;\r\n                    //角色\r\n                    //this.roles = this.userRoles.map(i => { return { label: i.name, value: i.normalizedName, checked: this.userInRole(i, this.user) }; });\r\n                    this.roles = this.userRoles.map(i => { return { label: i.name, value: i.normalizedName, checked: true }; });\r\n                    this.userInRoles();\r\n                    this.loading = false;\r\n                    //对isDisable做初始化\r\n                    this.isDisable = false;\r\n                    if (this.user.employeeId) {\r\n                        this.isDisable = true;\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    handleCancel = (e) => {\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n        this.reset(e);\r\n    }\r\n\r\n    esave(): void {\r\n        for (const i in this.eform.controls) {\r\n            this.eform.controls[i].markAsDirty();\r\n        }\r\n        console.log('log', this.eform.value);\r\n        if (this.eform.valid) {\r\n            this.isConfirmLoading = true;\r\n\r\n            var roles = [];\r\n\r\n            this.roles.forEach((role) => {\r\n                if (role.checked) {\r\n                    roles.push(role.value);\r\n                }\r\n            });\r\n\r\n            this.user.roleNames = roles;\r\n            this.user.surname = this.user.userName;\r\n            this._userService.update(this.user)\r\n                .finally(() => { this.isConfirmLoading = false; })\r\n                .subscribe(() => {\r\n                    this.notify.info(this.l('保存成功！'));\r\n                    this.close();\r\n                    this.modalSave.emit(null);\r\n                });\r\n        }\r\n    }\r\n\r\n    close(): void {\r\n        this.modalVisible = false;\r\n    }\r\n\r\n    getFormControl(name: string) {\r\n        return this.eform.controls[name];\r\n    }\r\n\r\n    reset(e): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.eform.reset();\r\n        for (const key in this.eform.controls) {\r\n            this.eform.controls[key].markAsPristine();\r\n        }\r\n    }\r\n    /**\r\n     * 显示选择员工弹框\r\n     */\r\n    employees() {\r\n        this.selecteEmployeeModal.show();\r\n    }\r\n    /**\r\n     * 选择员工弹框回传数据\r\n     */\r\n    getSelectData = (employee: Employee) => {\r\n        //对isDisable做初始化\r\n        this.isDisable = false;\r\n        if (employee) {\r\n            if (employee.id) {\r\n                this.isDisable = true;\r\n            }\r\n            this.user.name = employee.name;\r\n            this.user.employeeId = employee.id;\r\n        }\r\n        for (const key in this.eform.controls) {\r\n            if (!this.user[key]) {\r\n                this.eform.controls[key].markAsPristine();\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/edit-user/edit-user.component.ts","module.exports = \"\\r\\n<nz-modal [nzVisible]=\\\"emodalVisible\\\" [nzTitle]=\\\"'选择员工'\\\" [nzConfirmLoading]=\\\"eloading\\\" [nzContent]=\\\"employeeContent\\\" [nzFooter]=\\\"employeeFooter\\\"\\r\\n    (nzOnCancel)=\\\"handleeCancel($event)\\\" style=\\\"width: 520px;\\\">\\r\\n    <ng-template #employeeContent>\\r\\n        <nz-card [nzBordered]=\\\"false\\\" *ngIf=\\\"emodalVisible\\\">\\r\\n            <form nz-form (ngSubmit)=\\\"refreshData()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n                <div nz-row [nzGutter]=\\\"24\\\">\\r\\n                    <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                        <div nz-form-item class=\\\"d-flex\\\">\\r\\n                            <div nz-form-control class=\\\"flex-1\\\">\\r\\n                                <!-- <nz-input  [nzType]=\\\"'search'\\\" [(ngModel)]=\\\"q.no\\\" name=\\\"no\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请输入员工名或员工编码'\\\" nzId=\\\"no\\\" style=\\\"width: 420px;\\\"></nz-input> -->\\r\\n                                <nz-input [nzType]=\\\"'search'\\\" [(ngModel)]=\\\"q.no\\\" name=\\\"no\\\" (nzOnSearch)=\\\"refreshData()\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请输入员工名或员工编码'\\\"\\r\\n                                    nzId=\\\"no\\\" style=\\\"width: 420px;\\\"></nz-input>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n            <nz-table #nzTable [nzAjaxData]=\\\"employee\\\" [nzIsPagination]=\\\"false\\\" [nzScroll]=\\\"{ x:'500',y: '200' }\\\"  [nzLoading]=\\\"eloading\\\"\\r\\n                [nzShowSizeChanger]=\\\"true\\\">\\r\\n                <thead nz-thead>\\r\\n                    <tr>\\r\\n                        <th nz-th>\\r\\n                            <span>员工编码</span>\\r\\n                        </th>\\r\\n                        <th nz-th>\\r\\n                            <span>姓名</span>\\r\\n                        </th>\\r\\n                        <th nz-th>\\r\\n                            <span>职位</span>\\r\\n                        </th>\\r\\n                        <th nz-th>\\r\\n                            <span>操作</span>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody nz-tbody>\\r\\n                    <tr nz-tbody-tr *ngFor=\\\"let employee of nzTable.data\\\">\\r\\n                        <td nz-td>{{employee.code}}</td>\\r\\n                        <td nz-td>{{employee.name}}</td>\\r\\n                        <td nz-td>{{employee.positionName}}</td>\\r\\n                        <td nz-td>\\r\\n                            <a (click)=\\\"SelectEmployee(employee)\\\">选择</a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </nz-table>\\r\\n        </nz-card>\\r\\n    </ng-template>\\r\\n    <ng-template #employeeFooter>\\r\\n\\r\\n    </ng-template>\\r\\n</nz-modal>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/employee-modal/employee-modal.component.html\n// module id = ../../../../../src/app/admin/users/employee-modal/employee-modal.component.html\n// module chunks = admin.module","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { Employee } from '@shared/service-proxies/entity/employee';\r\nimport { EmployeeServiceProxy, PagedResultDtoOfEmployee } from '@shared/service-proxies/marketing-service/employee-service';\r\nimport { EmployeesServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'employee-modal',\r\n    templateUrl: 'employee-modal.component.html',\r\n})\r\nexport class EmployeeModalComponent implements OnInit {\r\n    @Output() modalSelect: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    q: any = {\r\n        pi: 1,\r\n        ps: 10,\r\n        total: 0,\r\n        sorter: '',\r\n        status: -1,\r\n        statusList: [],\r\n        no: ''\r\n    };\r\n    eloading = false;\r\n    emodalVisible = false;\r\n    employee: Employee[] = [];\r\n    status = [\r\n        { text: '启用', value: false, type: 'success' },\r\n        { text: '禁用', value: false, type: 'default' }\r\n    ];\r\n    positions = [\r\n        { text: '零售客户', value: 1 },\r\n        { text: '客户经理', value: 2 },\r\n        { text: '营销人员', value: 3 },\r\n        { text: '消费者', value: 4 },\r\n        { text: '取消关注', value: 5 },\r\n    ];\r\n    constructor(private employeeService: EmployeeServiceProxy, private service: EmployeesServiceProxy) {\r\n\r\n    }\r\n    ngOnInit(): void {\r\n\r\n    }\r\n    show() {\r\n        this.employee = new Array<Employee>();\r\n        // this.employee=[];\r\n        this.emodalVisible = true;\r\n        this.refreshData();\r\n    }\r\n\r\n    /**\r\n     * 获取\r\n     */\r\n    refreshData() {\r\n        this.eloading = true;\r\n        this.service.getAllModal(this.q.no).subscribe((result: PagedResultDtoOfEmployee) => {\r\n            this.eloading = false;\r\n            let status = 5;\r\n            this.employee = result.items.map(i => {\r\n                i.positionName = this.positions[i.position - 1].text;\r\n                return i;\r\n            });\r\n            this.q.total = result.totalCount;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 取消按钮事件\r\n     */\r\n    handleeCancel = (e) => {\r\n        this.emodalVisible = false;\r\n        // this.isConfirmLoading = false;\r\n        // this.reset(e);\r\n        this.modalSelect.emit(null);\r\n        this.q.no = '';\r\n    }\r\n    /**\r\n     * \r\n     * @param employee 选择事件（对选择的数据进行回传）\r\n     */\r\n    SelectEmployee(employee: Employee): void {\r\n        this.q.no = '';\r\n        this.modalSelect.emit(employee);\r\n        this.emodalVisible = false;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/employee-modal/employee-modal.component.ts","module.exports = \"<pro-header  ></pro-header>\\r\\n<nz-card [nzBordered]=\\\"false\\\">\\r\\n    <form nz-form (ngSubmit)=\\\"refreshData()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n        <div nz-row [nzGutter]=\\\"24\\\">\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"no\\\">用户名</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-input [(ngModel)]=\\\"q.no\\\" name=\\\"no\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请输入'\\\" nzId=\\\"no\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                <div nz-form-item class=\\\"d-flex\\\">\\r\\n                    <div nz-form-label>\\r\\n                        <label for=\\\"callNo\\\">邮箱地址</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control class=\\\"flex-1\\\">\\r\\n                        <nz-input [nzSize]=\\\"'large'\\\" nzId=\\\"callNo\\\"></nz-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n                <button nz-button type=\\\"submit\\\" [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"loading\\\" [nzSize]=\\\"'large'\\\">查询</button>\\r\\n                <button nz-button type=\\\"reset\\\" (click)=\\\"refreshData()\\\" [nzSize]=\\\"'large'\\\" class=\\\"mx-sm\\\">重置</button>\\r\\n                <button nz-button (click)=\\\"adduser()\\\" [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\">\\r\\n                    <i class=\\\"anticon anticon-plus\\\"></i>\\r\\n                    <span>新建</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n    <nz-table #nzTable [nzAjaxData]=\\\"data\\\" [nzTotal]=\\\"q.total\\\" [(nzPageIndex)]=\\\"q.pi\\\" [(nzPageSize)]=\\\"q.ps\\\" [nzLoading]=\\\"loading\\\"\\r\\n        [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"refreshData()\\\" (nzPageSizeChange)=\\\"refreshData()\\\">\\r\\n        <thead nz-thead>\\r\\n            <tr>\\r\\n                <th nz-th>\\r\\n                    <span>账号</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>用户名</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>邮箱</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>启用</span>\\r\\n                </th>\\r\\n                <th nz-th>\\r\\n                    <span>操作</span>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody nz-tbody>\\r\\n            <tr nz-tbody-tr *ngFor=\\\"let user of nzTable.data\\\">\\r\\n                <td nz-td>{{user.userName}}</td>\\r\\n                <td nz-td>{{user.name}}</td>\\r\\n                <td nz-td>{{user.emailAddress}}</td>\\r\\n                <td nz-td>\\r\\n                    <nz-badge [nzStatus]=\\\"user.activeType\\\" [nzText]=\\\"user.activeText\\\"></nz-badge>\\r\\n                </td>\\r\\n                <td nz-td>\\r\\n                    <a (click)=\\\"editUser(user)\\\">编辑</a>\\r\\n                    <span nz-table-divider></span>\\r\\n                    <a (click)=\\\"msg.success('删除' + user.id)\\\">删除</a>\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </nz-table>\\r\\n</nz-card>\\r\\n<edit-user-modal #editUserModal (modalSave)=\\\"refreshData()\\\"></edit-user-modal>\\r\\n<create-user-modal #createUserModal (modalSave)=\\\"refreshData()\\\"></create-user-modal>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/users.component.html\n// module id = ../../../../../src/app/admin/users/users.component.html\n// module chunks = admin.module","import { Component, Injector, OnInit, ViewChild } from '@angular/core';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\n//import { getRule, saveRule, removeRule } from '../../../../_mock/rule.service';\r\nimport { UserServiceProxy, UserDto, CreateUserDto, RoleDto, PagedResultDtoOfUserDto } from '@shared/service-proxies/service-proxies';\r\n\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { CreateUserComponent } from \"./create-user/create-user.component\";\r\nimport { EditUserComponent } from \"./edit-user/edit-user.component\";\r\n\r\n@Component({\r\n    selector: 'app-page-users',\r\n    templateUrl: './users.component.html'\r\n})\r\nexport class UsersComponent extends AppComponentBase implements OnInit {\r\n\r\n    @ViewChild('editUserModal') editUserModal: EditUserComponent;\r\n    @ViewChild('createUserModal') createUserModal: CreateUserComponent;\r\n\r\n    q: any = {\r\n        pi: 1,\r\n        ps: 10,\r\n        total: 0,\r\n        sorter: '',\r\n        status: -1,\r\n        statusList: []\r\n    };\r\n    data: UserDto[] = [];\r\n    loading = false;\r\n    selectedRows: any[] = [];\r\n    curRows: any[] = [];\r\n    totalCallNo = 0;\r\n    allChecked = false;\r\n    indeterminate = false;\r\n    status = [\r\n        { text: '启用', value: false, type: 'success' },\r\n        { text: '禁用', value: false, type: 'default' }\r\n    ];\r\n    sortMap: any = {};\r\n    expandForm = false;\r\n\r\n    constructor(injector: Injector, public msg: NzMessageService, private _userService: UserServiceProxy) {\r\n        super(injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.refreshData();\r\n    }\r\n\r\n    adduser() {\r\n        this.createUserModal.show();\r\n    }\r\n\r\n    /*remove() {\r\n        this.selectedRows.forEach(i => removeRule(i.no));\r\n        this.refreshData();\r\n        this.clear();\r\n    }*/\r\n\r\n    clear() {\r\n        this.selectedRows = [];\r\n        this.totalCallNo = 0;\r\n        this.data.forEach(i => i.checked = false);\r\n        this.refreshStatus();\r\n    }\r\n\r\n    refreshStatus() {\r\n        const allChecked = this.curRows.every(value => value.disabled || value.checked);\r\n        const allUnChecked = this.curRows.every(value => value.disabled || !value.checked);\r\n        this.allChecked = allChecked;\r\n        this.indeterminate = (!allChecked) && (!allUnChecked);\r\n        this.selectedRows = this.data.filter(value => value.checked);\r\n        this.totalCallNo = this.selectedRows.reduce((total, cv) => total + cv.callNo, 0);\r\n    }  \r\n\r\n    refreshData(reset = false) {\r\n        if (reset) {\r\n            this.q.pi = 1;\r\n        }\r\n        this.loading = true;\r\n        this._userService.getAll((this.q.pi - 1) * this.q.ps, this.q.ps).subscribe((result: PagedResultDtoOfUserDto) => {\r\n            this.loading = false;\r\n            let status = 0;\r\n            this.data = result.items.map(i => {\r\n                if (i.isActive) {\r\n                    status = 0;\r\n                } else {\r\n                    status = 1;\r\n                }\r\n                const statusItem = this.status[status];\r\n                i.activeText = statusItem.text;\r\n                i.activeType = statusItem.type;\r\n                return i;\r\n            });\r\n            this.q.total = result.totalCount;\r\n        })\r\n    };\r\n\r\n    reset(ls: any[]) {\r\n        for (const item of ls) item.value = false;\r\n        this.refreshData();\r\n    }\r\n\r\n   \r\n    editUser(user: UserDto): void {\r\n        this.editUserModal.show(user.id);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/users/users.component.ts","module.exports = \"<!--component html goes here -->\\r\\n<!-- <nz-card>\\r\\n\\r\\n</nz-card> -->\\r\\n<!-- <form nz-form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"name\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"name\\\">\\r\\n            <nz-input formControlName=\\\"name\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"name.dirty || name.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"name.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"name.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"name.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"appOrgId\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"appOrgId\\\">\\r\\n            <nz-input formControlName=\\\"appOrgId\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'appOrgId'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"appOrgId.dirty || appOrgId.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"appOrgId.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appOrgId.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appOrgId.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"appType\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"appType\\\">\\r\\n            <nz-input formControlName=\\\"appType\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'appType'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"appType.dirty || appType.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"appType.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appType.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appType.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"appId\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"appId\\\">\\r\\n            <nz-input formControlName=\\\"appId\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'appId'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"appId.dirty || appId.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"appId.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appId.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appId.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"appSecret\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"appSecret\\\">\\r\\n            <nz-input formControlName=\\\"appSecret\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'appSecret'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"appSecret.dirty || appSecret.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"appSecret.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appSecret.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"appSecret.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"qrCodeUrl\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"qrCodeUrl\\\">\\r\\n            <nz-input formControlName=\\\"qrCodeUrl\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'qrCodeUrl'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"qrCodeUrl.dirty || qrCodeUrl.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"qrCodeUrl.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"qrCodeUrl.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"qrCodeUrl.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"token\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"token\\\">\\r\\n            <nz-input formControlName=\\\"token\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'token'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"token.dirty || token.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"token.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"token.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"token.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"expiresIn\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"expiresIn\\\">\\r\\n            <nz-input formControlName=\\\"expiresIn\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'expiresIn'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"expiresIn.dirty || expiresIn.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"expiresIn.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"expiresIn.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"expiresIn.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"accessToken\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"accessToken\\\">\\r\\n            <nz-input formControlName=\\\"accessToken\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'accessToken'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"accessToken.dirty || accessToken.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"accessToken.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"accessToken.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"accessToken.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div nz-form-item nz-row>\\r\\n        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n            <label for=\\\"nextGettime\\\" nz-form-item-required>\\r\\n                <span>\\r\\n                    Nickname\\r\\n                    <nz-tooltip [nzTitle]=\\\"'What do you want other to call you'\\\">\\r\\n                        <i nz-tooltip class=\\\"anticon anticon-question-circle-o\\\"></i>\\r\\n                    </nz-tooltip>\\r\\n                </span>\\r\\n            </label>\\r\\n        </div>\\r\\n        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"nextGettime\\\">\\r\\n            <nz-input formControlName=\\\"nextGettime\\\" nzPlaceHolder=\\\"minlength=6\\\" [nzId]=\\\"'nextGettime'\\\"></nz-input>\\r\\n            <ng-container *ngIf=\\\"nextGettime.dirty || nextGettime.touched\\\">\\r\\n                <p nz-form-explain *ngIf=\\\"nextGettime.errors?.required\\\">Please input your nickname!</p>\\r\\n                <p nz-form-explain *ngIf=\\\"nextGettime.errors?.checked\\\">Only input 'cipchk'</p>\\r\\n                <p nz-form-explain *ngIf=\\\"nextGettime.errors?.minlength\\\">This field requires a min length</p>\\r\\n            </ng-container>\\r\\n        </div>\\r\\n    </div>\\r\\n</form> -->\\r\\n<nz-card>\\r\\n    <form nz-form [formGroup]=\\\"form\\\" id=\\\"frm_create_role\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"name\\\" nz-form-item-required>微信号名称</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('name')\\\">\\r\\n                <nz-input formControlName=\\\"name\\\" [(ngModel)]=\\\"authSet.name\\\" [nzId]=\\\"'name'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('maxlength')\\\">字符长度小于等于50</div>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('name').dirty&&getFormControl('name').hasError('required')\\\">请输入微信号名称</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"appOrgId\\\" nz-form-item-required>微信原始ID</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('appOrgId')\\\">\\r\\n                <nz-input formControlName=\\\"appOrgId\\\" [(ngModel)]=\\\"authSet.appOrgId\\\" [nzId]=\\\"'appOrgId'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('appOrgId').dirty&&getFormControl('appOrgId').hasError('maxlength')\\\">字符长度小于等于250</div>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('appOrgId').dirty&&getFormControl('appOrgId').hasError('required')\\\">请输入微信原始ID</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"appType\\\" nz-form-item-required>微信类型</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('appType')\\\">\\r\\n                <!-- <nz-radio-group>\\r\\n                    <label nz-radio-button [nzValue]=\\\"'1'\\\">\\r\\n                        <span>订阅号</span>\\r\\n                    </label>\\r\\n                    <label nz-radio-button [nzValue]=\\\"'2'\\\">\\r\\n                        <span>认证订阅号</span>\\r\\n                    </label>\\r\\n                    <label nz-radio-button [nzValue]=\\\"'3'\\\">\\r\\n                        <span>服务号</span>\\r\\n                    </label>\\r\\n                    <label nz-radio-button [nzValue]=\\\"'4'\\\">\\r\\n                        <span>认证服务号</span>\\r\\n                    </label>\\r\\n                </nz-radio-group> -->\\r\\n                <nz-radio-group formControlName=\\\"appType\\\"  [(ngModel)]=\\\"authSet.appType\\\" class=\\\"mb-md\\\">\\r\\n                        <label nz-radio [nzValue]=\\\"1\\\"><span>订阅号</span></label>\\r\\n                        <label nz-radio [nzValue]=\\\"2\\\"><span>认证订阅号</span></label>\\r\\n                        <label nz-radio [nzValue]=\\\"3\\\"><span>服务号</span></label>\\r\\n                        <label nz-radio [nzValue]=\\\"4\\\"><span>认证服务号</span></label>\\r\\n                </nz-radio-group>\\r\\n                <!-- <nz-input formControlName=\\\"appType\\\" [(ngModel)]=\\\"authSet.appType\\\" nzPlaceHolder=\\\"请输入小于等于32的字符\\\" [nzId]=\\\"'appType'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('appType').dirty&&getFormControl('appType').hasError('required')\\\">请输入角色显示名</div> -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"appId\\\" nz-form-item-required>微信AppID</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('appId')\\\">\\r\\n                <nz-input formControlName=\\\"appId\\\" [(ngModel)]=\\\"authSet.appId\\\" [nzId]=\\\"'appId'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('appId').dirty&&getFormControl('appId').hasError('maxlength')\\\">字符长度小于等于250</div>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('appId').dirty&&getFormControl('appId').hasError('required')\\\">请输入微信AppID</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"appSecret\\\" nz-form-item-required>微信AppSecret</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('appSecret')\\\">\\r\\n                <nz-input formControlName=\\\"appSecret\\\" [(ngModel)]=\\\"authSet.appSecret\\\" [nzId]=\\\"'appSecret'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('appSecret').dirty&&getFormControl('appSecret').hasError('maxlength')\\\">字符长度小于等于250</div>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('appSecret').dirty&&getFormControl('appSecret').hasError('required')\\\">请输入微信AppSecret</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"encodingAESKey\\\">微信EncodingAESKey</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('encodingAESKey')\\\">\\r\\n                <nz-input formControlName=\\\"encodingAESKey\\\" [(ngModel)]=\\\"authSet.encodingAESKey\\\" [nzId]=\\\"'encodingAESKey'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('encodingAESKey').dirty&&getFormControl('encodingAESKey').hasError('maxlength')\\\">字符长度小于等于500</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"qrCodeUrl\\\">微信二维码图片URL</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('qrCodeUrl')\\\">\\r\\n                <!-- <nz-input formControlName=\\\"qrCodeUrl\\\" [(ngModel)]=\\\"authSet.qrCodeUrl\\\" [nzId]=\\\"'qrCodeUrl'\\\"></nz-input> -->\\r\\n                <label nz-upload nzAccept=\\\"image\\\"\\r\\n                nzAction=\\\"https://jsonplaceholder.typicode.com/posts/\\\">\\r\\n                <button nz-button>\\r\\n                  <i class=\\\"anticon anticon-upload\\\"></i><span>上传</span>\\r\\n                </button>\\r\\n              </label>\\r\\n                <!-- <div nz-form-explain *ngIf=\\\"getFormControl('qrCodeUrl').dirty&&getFormControl('qrCodeUrl').hasError('maxlength')\\\">字符长度小于等于250</div> -->\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"token\\\" nz-form-item-required>微信Token</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('token')\\\">\\r\\n                <nz-input formControlName=\\\"token\\\" [(ngModel)]=\\\"authSet.token\\\" [nzId]=\\\"'token'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('token').dirty&&getFormControl('token').hasError('maxlength')\\\">字符长度小于等于250</div>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('token').dirty&&getFormControl('token').hasError('required')\\\">请输入角色显示名</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"accessToken\\\">微信access_token</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('accessToken')\\\">\\r\\n                <nz-input formControlName=\\\"accessToken\\\" [(ngModel)]=\\\"authSet.accessToken\\\" [nzId]=\\\"'accessToken'\\\"></nz-input>\\r\\n                <div nz-form-explain *ngIf=\\\"getFormControl('accessToken').dirty&&getFormControl('accessToken').hasError('maxlength')\\\">字符长度小于等于255</div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"expiresIn\\\">微信expires_in</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('expiresIn')\\\">\\r\\n                <nz-input formControlName=\\\"expiresIn\\\" [(ngModel)]=\\\"authSet.expiresIn\\\" [nzId]=\\\"'expiresIn'\\\"></nz-input>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div nz-form-item nz-row>\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                <label for=\\\"nextGettime\\\">微信next_gettime</label>\\r\\n            </div>\\r\\n            <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('nextGettime')\\\">\\r\\n                <nz-input formControlName=\\\"nextGettime\\\" [(ngModel)]=\\\"authSet.nextGettime\\\" [nzId]=\\\"'nextGettime'\\\"></nz-input>\\r\\n            </div>\\r\\n        </div> -->\\r\\n        <div nz-form-item nz-row  class=\\\"mb0\\\">\\r\\n            <div nz-form-label nz-col [nzSm]=\\\"5\\\">\\r\\n                <!-- <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                    {{l(\\\"取消\\\")}}\\r\\n                </button> -->\\r\\n                <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                    {{l(\\\"保存\\\")}}\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n</nz-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/auth-setting/auth-setting.component.html\n// module id = ../../../../../src/app/admin/weichat-setting/auth-setting/auth-setting.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthSetting } from '@shared/service-proxies/entity/auth-setting';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { AuthSettingServiceProxy } from '@shared/service-proxies/service-proxies';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'auth-setting',\r\n    templateUrl: 'auth-setting.component.html',\r\n})\r\nexport class AuthSettingComponent extends AppComponentBase implements OnInit {\r\n    form: FormGroup;\r\n    authSet: AuthSetting = new AuthSetting();\r\n\r\n    constructor(injector: Injector, private fb: FormBuilder, private service: AuthSettingServiceProxy) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this.form = this.fb.group({\r\n            name: [null, [Validators.compose([Validators.maxLength(50), Validators.required])]],\r\n            appOrgId: [null, [Validators.compose([Validators.required, Validators.maxLength(250)])]],\r\n            appType: [null, [Validators.required]],\r\n            appId: [null, [Validators.compose([Validators.required, Validators.maxLength(250)])]],\r\n            appSecret: [null, [Validators.compose([Validators.required, Validators.maxLength(250)])]],\r\n            encodingAESKey: [null, [Validators.compose([Validators.maxLength(500)])]],\r\n            qrCodeUrl: [null, [Validators.maxLength(250)]],\r\n            token: [null, [Validators.compose([Validators.required, Validators.maxLength(250)])]]\r\n            // accessToken: [null, [Validators.maxLength(255)]],\r\n            // expiresIn: [null],\r\n            // nextGettime: [null]\r\n        });\r\n        this.getAuthSetByTenantId();\r\n    }\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    getFormControl(name: string) {\r\n        return this.form.controls[name];\r\n    }\r\n\r\n    /**\r\n     * 更新新增微信配置\r\n     */\r\n    save() {\r\n        for (const i in this.form.controls) {\r\n            this.form.controls[i].markAsDirty();\r\n        }\r\n        if (this.form.valid) {\r\n            this.service.update(this.authSet).subscribe(() => {\r\n                this.notify.info(this.l('保存成功！'));\r\n            });\r\n        }\r\n        abp.multiTenancy.setTenantIdCookie();\r\n        \r\n    }\r\n\r\n    /**\r\n     * 通过租户id获取微信配置\r\n     */\r\n    getAuthSetByTenantId() {\r\n        this.service.get().subscribe((result: AuthSetting) => {\r\n            this.authSet = result;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/auth-setting/auth-setting.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"formc\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_create_message\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'创建关键字回复'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\" [nzFooter]=\\\"modalFooter\\\"\\r\\n        (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n            <fieldset>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"keyWord\\\" nz-form-item-required>关键字</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getcFormControl('keyWord')\\\">\\r\\n                        <nz-input formControlName=\\\"keyWord\\\" [(ngModel)]=\\\"messages.keyWord\\\"  [nzId]=\\\"'tenancyName'\\\"></nz-input>\\r\\n                        <div nz-form-explain *ngIf=\\\"getcFormControl('keyWord').dirty&&getcFormControl('keyWord').hasError('maxlength')\\\">字符长度小于等于50</div>\\r\\n                        <div nz-form-explain *ngIf=\\\"getcFormControl('keyWord').dirty&&getcFormControl('keyWord').hasError('required')\\\">关键字不能为空</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"matchMode\\\" nz-form-item-required>匹配模式</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getcFormControl('matchMode')\\\">\\r\\n                        <nz-radio-group formControlName=\\\"matchMode\\\" [(ngModel)]=\\\"messages.matchMode\\\" class=\\\"mb-md\\\">\\r\\n                            <label nz-radio [nzValue]=\\\"1\\\">\\r\\n                                <span>精准匹配</span>\\r\\n                            </label>\\r\\n                            <label nz-radio [nzValue]=\\\"2\\\">\\r\\n                                <span>模糊匹配</span>\\r\\n                            </label>\\r\\n                        </nz-radio-group>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                        <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                            <label for=\\\"msgType\\\" nz-form-item-required>消息类型</label>\\r\\n                        </div>\\r\\n                        <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getcFormControl('msgType')\\\">\\r\\n                            <nz-radio-group formControlName=\\\"msgType\\\" [(ngModel)]=\\\"messages.msgType\\\" class=\\\"mb-md\\\">\\r\\n                                <label nz-radio [nzValue]=\\\"1\\\">\\r\\n                                    <span>文字消息</span>\\r\\n                                </label>\\r\\n                                <label nz-radio [nzValue]=\\\"2\\\">\\r\\n                                    <span>图文消息</span>\\r\\n                                </label>\\r\\n                            </nz-radio-group>\\r\\n                            <!-- <nz-dropdown *ngFor=\\\"let type of msyTypes\\\">\\r\\n                                <ul nz-menu >\\r\\n                                        <li nz-menu-item>  {{type.text}}</li>\\r\\n                                  </ul>\\r\\n                            </nz-dropdown> -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getcFormControl('content')\\\">\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"content\\\" nz-form-item-required>内容</label>\\r\\n                    </div>\\r\\n                    <nz-input nzType=\\\"textarea\\\" nzRows=\\\"4\\\" formControlName=\\\"content\\\" [(ngModel)]=\\\"messages.content\\\" [nzId]=\\\"'content'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"getcFormControl('content').dirty&&getcFormControl('content').hasError('required')\\\">内容不能为空</div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                {{l(\\\"取消\\\")}}\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                {{l(\\\"保存\\\")}}\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/create-message/create-message.component.html\n// module id = ../../../../../src/app/admin/weichat-setting/messages/create-message/create-message.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { MessageServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { Messagess } from '@shared/service-proxies/entity/messages';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'create-message-modal',\r\n    templateUrl: 'create-message.component.html',\r\n})\r\nexport class CreateMessageComponent extends AppComponentBase implements OnInit {\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    //模态框是否可见\r\n    modalVisible = false;\r\n    //加载效果\r\n    isConfirmLoading = false;\r\n    messages: Messagess = new Messagess();\r\n    formc: FormGroup;\r\n\r\n    constructor(injector: Injector, private messageService: MessageServiceProxy, private fb: FormBuilder) {\r\n        super(injector);\r\n        let msyTypes = [\r\n            { value: 1,text:'文字消息'},\r\n            { value: 2,text:'图文消息'},\r\n        ]\r\n    }\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this.formc = this.fb.group({\r\n            keyWord: [null, [Validators.compose([Validators.required, Validators.maxLength(50)])]],\r\n            matchMode: [null, Validators.required],\r\n            msgType: [null, Validators.required],\r\n            content: [null, [Validators.compose([Validators.required])]]\r\n        });\r\n    }\r\n    /**\r\n     * 显示模态框（进入新增页）\r\n     */\r\n    show() {\r\n        this.modalVisible = true;\r\n    }\r\n\r\n    /**\r\n     * 取消按钮事件\r\n     */\r\n    handleCancel = (e) => {\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n        this.reset(e);\r\n    }\r\n    reset(e?): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.formc.reset();\r\n        for (const key in this.formc.controls) {\r\n            this.formc.controls[key].markAsPristine();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    getcFormControl(name: string) {\r\n        return this.formc.controls[name];\r\n    }\r\n\r\n    /**\r\n     * 保存关键字回复信息\r\n     */\r\n    save(): void {\r\n        for (const i in this.formc.controls) {\r\n            this.formc.controls[i].markAsDirty();\r\n        }\r\n        this.isConfirmLoading = true;\r\n        this.messageService.update(this.messages)\r\n            .finally(() => {\r\n                this.isConfirmLoading = false;\r\n            })\r\n            .subscribe(() => {\r\n                this.notify.info(this.l('保存成功！'));\r\n                this.modalVisible = false;\r\n                this.modalSave.emit(null);\r\n            });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/create-message/create-message.component.ts","module.exports = \"<form nz-form [formGroup]=\\\"forme\\\" *ngIf=\\\"modalVisible\\\" id=\\\"frm_edit_message\\\" (ngSubmit)=\\\"save()\\\">\\r\\n    <nz-modal [nzVisible]=\\\"modalVisible\\\" [nzTitle]=\\\"'关键字回复编辑'\\\" [nzConfirmLoading]=\\\"loading\\\" [nzContent]=\\\"modalContent\\\" [nzFooter]=\\\"modalFooter\\\"\\r\\n        (nzOnCancel)=\\\"handleCancel($event)\\\">\\r\\n        <ng-template #modalContent>\\r\\n\\r\\n            <ng-template #nzTabHeading>\\r\\n                关键字回复\\r\\n            </ng-template>\\r\\n            <fieldset>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"keyWord\\\" nz-form-item-required>关键字</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"geteFormControl('keyWord')\\\">\\r\\n                        <nz-input formControlName=\\\"keyWord\\\" [(ngModel)]=\\\"messages.keyWord\\\" [nzId]=\\\"'tenancyName'\\\"></nz-input>\\r\\n                        <div nz-form-explain *ngIf=\\\"geteFormControl('keyWord').dirty&&geteFormControl('keyWord').hasError('maxlength')\\\">字符长度小于等于50</div>\\r\\n                        <div nz-form-explain *ngIf=\\\"geteFormControl('keyWord').dirty&&geteFormControl('keyWord').hasError('required')\\\">关键字不能为空</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"matchMode\\\" nz-form-item-required>匹配模式</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"geteFormControl('matchMode')\\\">\\r\\n                        <nz-radio-group formControlName=\\\"matchMode\\\" [(ngModel)]=\\\"messages.matchMode\\\" class=\\\"mb-md\\\">\\r\\n                            <label nz-radio [nzValue]=\\\"1\\\">\\r\\n                                <span>精准匹配</span>\\r\\n                            </label>\\r\\n                            <label nz-radio [nzValue]=\\\"2\\\">\\r\\n                                <span>模糊匹配</span>\\r\\n                            </label>\\r\\n                        </nz-radio-group>\\r\\n                        <!-- <nz-input formControlName=\\\"matchMode\\\" [(ngModel)]=\\\"messages.matchMode\\\" [nzId]=\\\"'matchMode'\\\"></nz-input>\\r\\n                        <div nz-form-explain *ngIf=\\\"geteFormControl('matchMode').dirty&&geteFormControl('matchMode').hasError('maxlength')\\\">字符长度小于等于128</div>\\r\\n                        <div nz-form-explain *ngIf=\\\"geteFormControl('matchMode').dirty&&geteFormControl('matchMode').hasError('required')\\\">请输入名称</div> -->\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-item nz-row>\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"msgType\\\" nz-form-item-required>消息类型</label>\\r\\n                    </div>\\r\\n                    <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"geteFormControl('msgType')\\\">\\r\\n                        <nz-radio-group formControlName=\\\"msgType\\\" [(ngModel)]=\\\"messages.msgType\\\" class=\\\"mb-md\\\">\\r\\n                            <label nz-radio [nzValue]=\\\"1\\\">\\r\\n                                <span>文字消息</span>\\r\\n                            </label>\\r\\n                            <label nz-radio [nzValue]=\\\"2\\\">\\r\\n                                <span>图文消息</span>\\r\\n                            </label>\\r\\n                        </nz-radio-group>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"geteFormControl('content')\\\">\\r\\n                    <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                        <label for=\\\"content\\\" nz-form-item-required>回复内容</label>\\r\\n                    </div>\\r\\n                    <nz-input nzType=\\\"textarea\\\" nzRows=\\\"4\\\" formControlName=\\\"content\\\" [(ngModel)]=\\\"messages.content\\\" [nzId]=\\\"'content'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"geteFormControl('content').dirty&&geteFormControl('content').hasError('required')\\\">内容不能为空</div>\\r\\n                </div>\\r\\n            </fieldset>\\r\\n        </ng-template>\\r\\n        <ng-template #modalFooter>\\r\\n            <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"handleCancel($event)\\\">\\r\\n                {{l(\\\"取消\\\")}}\\r\\n            </button>\\r\\n            <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                {{l(\\\"保存\\\")}}\\r\\n            </button>\\r\\n        </ng-template>\\r\\n    </nz-modal>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/edit-message/edit-message.component.html\n// module id = ../../../../../src/app/admin/weichat-setting/messages/edit-message/edit-message.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, Output, EventEmitter } from '@angular/core';\r\nimport { MessageServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { Messagess } from '@shared/service-proxies/entity/messages';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'edit-message-modal',\r\n    templateUrl: 'edit-message.component.html',\r\n})\r\nexport class EditMessageComponent extends AppComponentBase implements OnInit {\r\n    @Output() modalSave: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    messages: Messagess = new Messagess();\r\n    modalVisible=false;\r\n    isConfirmLoading = false;\r\n    forme:FormGroup;\r\n    constructor(injector:Injector ,private messageService: MessageServiceProxy,private fb:FormBuilder) {\r\n        super(injector);\r\n    }\r\n\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this.forme = this.fb.group({\r\n            keyWord: [null, [Validators.compose([Validators.required, Validators.maxLength(50)])]],\r\n            matchMode: [null,Validators.required],\r\n            msgType: [null,Validators.required],\r\n            content: [null,[Validators.compose([Validators.required])]]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 进入编辑页方法\r\n     * @param id \r\n     */\r\n    show(id: number) {\r\n       this.getMessageById(id);\r\n       this.modalVisible=true;\r\n    }\r\n     /**\r\n     * \r\n     * @param name \r\n     */\r\n    geteFormControl(name: string) {\r\n        return this.forme.controls[name];\r\n    }\r\n    /**\r\n     * 取消按钮\r\n     */\r\n    handleCancel(){\r\n        this.modalVisible = false;\r\n        this.isConfirmLoading = false;\r\n        this.reset();\r\n    }\r\n    reset(e?): void {\r\n        if (e) {\r\n            e.preventDefault();\r\n        }\r\n        this.forme.reset();\r\n        for (const key in this.forme.controls) {\r\n            this.forme.controls[key].markAsPristine();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取单条自动回复消息\r\n     * @param id 自动回复消息id\r\n     */\r\n    getMessageById(id:number){\r\n        this.messageService.get(id).subscribe((result: Messagess) => {\r\n            this.messages = result;\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 保存自动回复信息\r\n     */\r\n    save():void{\r\n        //将控件标记为已编辑过\r\n        for(const i in this.forme.controls){\r\n            this.forme.controls[i].markAsDirty();\r\n        }\r\n        if(this.forme.valid){\r\n            this.messageService.update(this.messages)\r\n            .finally(()=>{this.isConfirmLoading=false;})\r\n            .subscribe(()=>{\r\n                this.notify.info(this.l('保存成功！'));\r\n                this.modalVisible=false;\r\n                this.modalSave.emit(null);\r\n            });\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/edit-message/edit-message.component.ts","module.exports = \"<!--component html goes here -->\\r\\n<pro-header>\\r\\n</pro-header>\\r\\n<nz-tabset>\\r\\n    <nz-tab>\\r\\n        <ng-template #nzTabHeading>\\r\\n            自动回复\\r\\n        </ng-template>\\r\\n        <nz-card [nzBordered]=\\\"false\\\">\\r\\n            <form nz-form (ngSubmit)=\\\"getMessgeAll()\\\" [nzLayout]=\\\"'inline'\\\">\\r\\n                <div nz-row [nzGutter]=\\\"24\\\">\\r\\n                    <ng-template #deleteContent>\\r\\n                        <h2>是否删除关键字{{mesT}}?</h2>\\r\\n                    </ng-template>\\r\\n                    <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\">\\r\\n                        <div nz-form-item class=\\\"d-flex\\\">\\r\\n                            <div nz-form-control class=\\\"flex-1\\\">\\r\\n                                <nz-input [(ngModel)]=\\\"mesText\\\" name=\\\"no\\\" [nzSize]=\\\"'large'\\\" [nzPlaceHolder]=\\\"'请输入关键字'\\\" nzId=\\\"no\\\"></nz-input>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div nz-col [nzSpan]=\\\"8\\\" class=\\\"mb-md\\\" [class.text-right]=\\\"'true'\\\">\\r\\n                        <button nz-button type=\\\"submit\\\" [nzType]=\\\"'primary'\\\" [nzLoading]=\\\"loading\\\" [nzSize]=\\\"'large'\\\">查询</button>\\r\\n                        <button nz-button type=\\\"reset\\\" (click)=\\\"ResetSearch()\\\" [nzSize]=\\\"'large'\\\" class=\\\"mx-sm\\\">重置</button>\\r\\n                        <button nz-button [nzType]=\\\"'primary'\\\" (click)=\\\"createMessage()\\\" [nzSize]=\\\"'large'\\\">\\r\\n                            <i class=\\\"anticon anticon-plus\\\"></i>\\r\\n                            <span>新建</span>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </form>\\r\\n            <nz-table #nzTable [nzAjaxData]=\\\"messagess\\\" [nzTotal]=\\\"q.total\\\" [(nzPageIndex)]=\\\"q.pi\\\" [(nzPageSize)]=\\\"q.ps\\\" [nzLoading]=\\\"loading\\\"\\r\\n                [nzShowSizeChanger]=\\\"true\\\" (nzPageIndexChange)=\\\"getMessgeAll()\\\" (nzPageSizeChange)=\\\"getMessgeAll()\\\">\\r\\n                <thead nz-thead>\\r\\n                    <tr>\\r\\n                        <th nz-th>\\r\\n                            <span>关键字</span>\\r\\n                        </th>\\r\\n                        <th nz-th>\\r\\n                            <span>回复内容</span>\\r\\n                        </th>\\r\\n                        <th nz-th>\\r\\n                            <span>操作</span>\\r\\n                        </th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody nz-tbody>\\r\\n                    <tr nz-tbody-tr *ngFor=\\\"let message of nzTable.data\\\">\\r\\n                        <td nz-td>{{message.keyWord}}</td>\\r\\n                        <td nz-td>{{message.content}}</td>\\r\\n                        <td nz-td>\\r\\n                            <a (click)=\\\"editMessage(message)\\\">编辑</a>\\r\\n                            <span nz-table-divider></span>\\r\\n                            <a (click)=\\\"delete(message,deleteContent)\\\">删除</a>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </nz-table>\\r\\n        </nz-card>\\r\\n        <edit-message-modal #editMessageModal (modalSave)=\\\"getMessgeAll()\\\"></edit-message-modal>\\r\\n        <create-message-modal #createMessageModal (modalSave)=\\\"getMessgeAll()\\\"></create-message-modal>\\r\\n    </nz-tab>\\r\\n    <nz-tab>\\r\\n        <ng-template #deletesContent>\\r\\n            <h2>是否删除被关注回复?</h2>\\r\\n        </ng-template>\\r\\n        <ng-template #nzTabHeading>\\r\\n            被关注回复\\r\\n        </ng-template>\\r\\n        <form nz-form [formGroup]=\\\"form\\\" id=\\\"frm_create_subscrite\\\"  (ngSubmit)=\\\"save()\\\">\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"msgType\\\" nz-form-item-required>消息类型</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('msgType')\\\">\\r\\n                    <nz-radio-group formControlName=\\\"msgType\\\" [(ngModel)]=\\\"subscribes.msgType\\\" class=\\\"mb-md\\\">\\r\\n                        <label nz-radio [nzValue]=\\\"1\\\">\\r\\n                            <span>文字消息</span>\\r\\n                        </label>\\r\\n                        <label nz-radio [nzValue]=\\\"2\\\">\\r\\n                            <span>图文消息</span>\\r\\n                        </label>\\r\\n                    </nz-radio-group>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"4\\\">\\r\\n                    <label for=\\\"content\\\" nz-form-item-required>回复内容</label>\\r\\n                </div>\\r\\n                <div nz-form-control nz-col [nzSm]=\\\"20\\\" nzHasFeedback [nzValidateStatus]=\\\"getFormControl('content')\\\">\\r\\n                    <nz-input nzType=\\\"textarea\\\" nzRows=\\\"6\\\" formControlName=\\\"content\\\" [(ngModel)]=\\\"subscribes.content\\\" [nzId]=\\\"'content'\\\"></nz-input>\\r\\n                    <div nz-form-explain *ngIf=\\\"getFormControl('content').dirty&&getFormControl('content').hasError('required')\\\">内容不能为空</div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div nz-form-item nz-row>\\r\\n                <div nz-form-label nz-col [nzSm]=\\\"7\\\">\\r\\n                    <button nz-button [nzType]=\\\"'primary'\\\" [nzSize]=\\\"'large'\\\" type=\\\"submit\\\" [nzLoading]=\\\"isConfirmLoading\\\">\\r\\n                        保存\\r\\n                    </button>\\r\\n                    <button nz-button [nzType]=\\\"'default'\\\" [nzSize]=\\\"'large'\\\" type=\\\"button\\\" (click)=\\\"deletes(deletesContent)\\\">\\r\\n                        删除回复\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </nz-tab>\\r\\n</nz-tabset>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/messages.component.html\n// module id = ../../../../../src/app/admin/weichat-setting/messages/messages.component.html\n// module chunks = admin.module","import { Component, OnInit, Injector, ViewChild } from '@angular/core';\r\nimport { MessageServiceProxy, PagedResultDtoOfMessage, SubscribeServiceProxy } from '@shared/service-proxies/service-proxies';\r\nimport { Messagess } from '@shared/service-proxies/entity/messages';\r\nimport { Subscribess } from '@shared/service-proxies/entity/subscribe';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AppComponentBase } from '@shared/app-component-base';\r\nimport { EditMessageComponent } from './edit-message/edit-message.component';\r\nimport { CreateMessageComponent } from './create-message/create-message.component';\r\nimport { NzModalService } from 'ng-zorro-antd';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'messages',\r\n    templateUrl: 'messages.component.html',\r\n})\r\nexport class MessagesComponent extends AppComponentBase implements OnInit {\r\n    @ViewChild('editMessageModal') editMessageModal: EditMessageComponent;\r\n    @ViewChild('createMessageModal') createMessageModal: CreateMessageComponent;\r\n\r\n    q: any = {\r\n        pi: 1,\r\n        ps: 10,\r\n        total: 0,\r\n        sorter: '',\r\n        status: -1,\r\n        statusList: []\r\n    };\r\n    loading = false;\r\n    mesText: string = '';\r\n    //用于显示删除框关键字\r\n    mesT: string = '';\r\n    isConfirmLoading = false;\r\n    messagess: Messagess[] = [];\r\n    subscribes: Subscribess = new Subscribess();\r\n    form: FormGroup;\r\n    constructor(injector: Injector, private messageService: MessageServiceProxy,\r\n        private subscribeService: SubscribeServiceProxy, private fb: FormBuilder,\r\n        private modal: NzModalService\r\n    ) {\r\n        super(injector);\r\n    }\r\n    /**\r\n     * 页面初始加载\r\n     */\r\n    ngOnInit(): void {\r\n        this.getMessgeAll();\r\n        this.getSubscribe();\r\n        this.form = this.fb.group({\r\n            msgType: [null, [Validators.compose([Validators.required])]],\r\n            content: [null, [Validators.compose([Validators.required])]]\r\n        }, );\r\n    }\r\n    //#region 自动回复消息\r\n\r\n    /**\r\n     * 获取自动回复消息信息\r\n     * @param reset \r\n     */\r\n    getMessgeAll(reset = false) {\r\n        if (reset) {\r\n            this.q.pi = 1;\r\n        }\r\n        this.loading = true;\r\n        this.messageService.getAll((this.q.pi - 1) * this.q.ps, this.q.ps, this.mesText).subscribe((result: PagedResultDtoOfMessage) => {\r\n            this.loading = false;\r\n            let status = 0;\r\n            this.messagess = result.items;\r\n            this.q.total = result.totalCount;\r\n        });\r\n    }\r\n    /**\r\n     * 重置\r\n     */\r\n    ResetSearch():void{\r\n        this.mesText='';\r\n        this.getMessgeAll(true);\r\n    }\r\n\r\n    /**\r\n     * 新建自动回复消息\r\n     */\r\n    createMessage() {\r\n        this.createMessageModal.show();\r\n    }\r\n\r\n    /**\r\n     * 更新自动回复消息\r\n     */\r\n    editMessage(message: Messagess) {\r\n        this.editMessageModal.show(message.id);\r\n    }\r\n\r\n    /**\r\n     * 删除单条关键字回复\r\n     * @param messages 关键字回复信息\r\n     * @param contentTpl 删除框id\r\n     */\r\n    delete(messages: Messagess, contentTpl): void {\r\n        this.mesT = messages.keyWord;\r\n        this.modal.open({\r\n            content: contentTpl,\r\n            okText: '是',\r\n            cancelText: '否',\r\n            onOk: () => {\r\n                this.messageService.delete(messages.id)\r\n                    .subscribe(() => {\r\n                        this.notify.info(this.l('删除成功！'));\r\n                        this.getMessgeAll();\r\n                    });\r\n            },\r\n            onCancel: () => {\r\n            }\r\n        });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region  关注回复消息 \r\n    /**\r\n     * 获取关注回复消息\r\n     */\r\n    getSubscribe() {\r\n        this.subscribeService.get().subscribe((result: Subscribess) => {\r\n            this.subscribes = result;\r\n        });\r\n    }\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    getFormControl(name: string) {\r\n        return this.form.controls[name];\r\n    }\r\n\r\n    /**\r\n     * 保存关注回复消息\r\n     */\r\n    save(): void {\r\n        for (const i in this.form.controls) {\r\n            this.form.controls[i].markAsDirty();\r\n        }\r\n        if (this.form.valid) {\r\n            this.subscribeService.update(this.subscribes)\r\n                .finally(() => { this.isConfirmLoading = false; })\r\n                .subscribe(() => {\r\n                    this.notify.info(this.l('保存成功'));\r\n                    this.getSubscribe();\r\n                });\r\n        }\r\n    }\r\n    deletes(contentTpl) {\r\n        this.modal.open({\r\n            content: contentTpl,\r\n            okText: '是',\r\n            cancelText: '否',\r\n            onOk: () => {\r\n                this.subscribeService.delete(this.subscribes.id)\r\n                    .subscribe(() => {\r\n                        this.getSubscribe();\r\n                        this.form.reset();\r\n                        this.notify.info(this.l('删除成功！'));\r\n                    });\r\n            },\r\n            onCancel: () => {\r\n            }\r\n        });\r\n    }\r\n    //#endregion\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/projects/hc/HCWeChat/ng-admin/src/app/admin/weichat-setting/messages/messages.component.ts"],"sourceRoot":"webpack:///"}